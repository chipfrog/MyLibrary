{"version":3,"sources":["Services/books.js","Reducers/bookSearchReducer.js","Reducers/bookInfoReducer.js","Services/login.js","Services/user.js","Reducers/notificationReducer.js","Reducers/ownedBookReducer.js","Reducers/userReducer.js","store.js","Components/Book.js","Components/BookGrid.js","Components/NavBar.js","Components/Notification.js","Views/Login.js","Views/BookInfo.js","Components/StarRating.js","Components/BookCard.js","Views/MyBooks.js","Components/Review.js","Components/DeleteConfirmation.js","Views/OwnedBookView.js","App.js","index.js"],"names":["getBooks","filter","a","axios","get","result","console","log","data","updateBook","bookInfo","token","bearerToken","config","headers","Authorization","bookData","id","review","rating","read","owned","quotes","put","response","addQuote","quote","book_id","post","addBook","title","volumeInfo","author","authors","linkToCoverImage","imageLinks","thumbnail","deleteBook","delete","initialState","books","undefined","searching","searchBooks","dispatch","type","bookSearchReducer","state","action","bookInfoReducer","login","credentials","res","createUser","userInfo","user","setNotification","message","notificationReducer","setOwnedBookInfo","ownedBookReducer","addQuoteToBook","updatedBook","tryUserCreation","newUsername","newPassword","error","tryLogin","username","password","tryBookUpdate","book","deleteBookFromLibrary","userReducer","user_books","map","reducer","combineReducers","bookSearch","ownedBook","notification","stateFromLocalStorage","userStateInStorage","localStorage","getItem","JSON","parse","getUserState","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","userState","stringify","setItem","saveUserState","getState","Book","info","useDispatch","setInfo","to","etag","Image","src","onClick","BookGrid","useSelector","size","Object","keys","length","rows","rowCounter","itemCounter","rowKey","i","push","Container","fluid","className","style","position","left","top","transform","Spinner","animation","variant","row","Row","Col","sm","md","lg","Navigation","showSort","sortDesc","sortAsc","history","useHistory","clearSearhBar","document","getElementById","reset","Navbar","bg","Brand","as","Link","Nav","NavDropdown","Item","Form","onSubmit","event","preventDefault","target","value","inline","Control","name","placeholder","Button","Notification","notifState","Alert","onClose","dismissible","Heading","Login","useState","show","setShow","handleClose","setNewUsername","setNewPassword","setUsernameError","setPasswordError","setUsername","setPassword","usernameError","passwordError","handleLogin","correctInput","input","minLength","handleUserCreation","Card","border","Header","Body","Group","controlId","Label","onChange","Modal","onHide","backdrop","keyboard","closeButton","Title","color","xs","BookInfo","bookAdded","setAddedBook","handleBookAdding","addedBook","addBookToLibrary","subtitle","description","StarRating","score","setScore","paintedStars","setPaintedStars","Array","currentScore","handleScore","onMouseEnter","onMouseLeave","BookCard","alt","Footer","MyBooks","sortedBooks","setSortedBooks","useEffect","types","field","tempArr","sort","bookA","bookB","xl","Review","setReview","editReview","setEditReview","quoteAdding","setQuoteAdding","newQuote","setNewQuote","handleReview","handleNewQuote","Tabs","Tab","eventKey","e","filteredQuotes","splice","handleQuoteDelete","DeleteConfirmation","handleDelete","OwnedBookView","bookRead","setBookRead","bookOwned","setBookOwned","Jumbotron","Check","label","checked","App","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.078180c3.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const getBooks = async (filter) => {\n  const result = await axios.get(`/api/googlebooks/${filter}`)\n  console.log(result.data)\n  return result.data\n}\n\nexport const updateBook = async (bookInfo, token) => {\n  const bearerToken = `bearer ${token}`\n\n  const config = {\n    headers: { Authorization: bearerToken }\n  }\n\n  const bookData = {\n    id: bookInfo.id,\n    review: bookInfo.review,\n    rating: bookInfo.rating,\n    read: bookInfo.read,\n    owned: bookInfo.owned,\n    quotes: bookInfo.quotes\n  }\n  const response = await axios.put(`/api/googleBooks/edit`, bookData, config)\n  return response\n}\n\nexport const addQuote = async (id, quote, token) => {\n  const bearerToken = `bearer ${token}`\n  const config = {\n    headers: { Authorization: bearerToken }\n  }\n  const data = {\n    book_id: id,\n    quote: quote\n  }\n\n  const response = await axios.post(`/api/googleBooks/addquote`, data, config)\n  return response\n\n}\n\nexport const addBook = async (bookInfo, token) => {\n  const bearerToken = `bearer ${token}`\n\n  const config = {\n    headers: { Authorization: bearerToken }\n  }\n\n  const bookData = {\n    title: bookInfo.volumeInfo.title,\n    author: bookInfo.volumeInfo.authors[0],\n    linkToCoverImage: bookInfo.volumeInfo.imageLinks.thumbnail,\n    review: bookInfo.review,\n    rating: bookInfo.rating,\n    read: bookInfo.read,\n    quotes: bookInfo.quotes\n  }\n\n  const response = await axios.post(`/api/googlebooks`, bookData, config)\n  console.log(`Lisätty kirja: ${response.data.title}`)\n  return response\n}\n\nexport const deleteBook = async (id, token) => {\n  const bearerToken = `bearer ${token}`\n\n  const config = {\n    headers: { Authorization: bearerToken }\n  }\n  const response = await axios.delete(`/api/googlebooks/delete`, { data: { config, id } })\n  console.log(response)\n}\n\n\n\n\n","import { getBooks } from '../Services/books'\n\nconst initialState = {\n  books: [],\n  filter: undefined,\n  searching: false\n}\n\nconst bookSearchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'BOOK_SEARCH':\n      return {\n        books: action.data.books,\n        filter: action.data.filter,\n        searching: false\n      }\n    case 'SEARCH_STARTED':\n      return {\n        books: [],\n        filter: undefined,\n        searching: true\n      }\n    case 'INIT_SEARCH_RESULTS':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const startSearch = () => {\n  return {\n    type: 'SEARCH_STARTED'\n  }\n} \n\nexport const initSearchResults = () => {\n  return {\n    type: 'INIT_SEARCH_RESULTS',\n    data: initialState\n  }\n}\n\nexport const searchBooks = (filter) => {\n  return async dispatch => {\n    const books = await getBooks(filter)\n    dispatch({\n      type: 'BOOK_SEARCH',\n      data: { books, filter }\n    })\n  }\n}\n\nexport default bookSearchReducer","const bookInfoReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_BOOK_INFO':\n      return action.data\n    case 'RESET_BOOK_INFO':\n      return null  \n    default:\n      return state\n  }\n}\n\nexport const setBookInfo = (bookInfo) => {\n  return {\n    type: 'SET_BOOK_INFO',\n    data: { bookInfo }\n  }\n}\n\nexport default bookInfoReducer","import axios from 'axios'\n\nexport const login = async (credentials) => {\n  const res = await axios.post(`/api/login`, credentials)\n  return res.data\n}\n\n","import axios from 'axios'\n\nexport const getUser = async (token) => {\n  const bearerToken = `bearer ${token}`\n  console.log(`token: ${bearerToken}`)\n\n  const config = {\n    headers: { Authorization: bearerToken }\n  }\n  const user = await axios.get(`/api/user`, config)\n  return user.data\n}\n\nexport const createUser = async (userInfo) => {\n  const user = await axios.post(`/api/user`, userInfo)\n  console.log(`User creation: ${user.data}`)\n  return user.data\n}","\nconst notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SHOW_NOTIFICATION':\n      return action.data\n    case 'RESET_MESSAGE':\n      return null \n    default:\n      return state  \n  }\n}\n\nexport const resetNotification = () => {\n  return {\n    type: 'RESET_MESSAGE',\n    data: null\n  }\n}\n\nexport const setNotification = (type, message) => {\n  return {\n    type: 'SHOW_NOTIFICATION',\n    data: {\n      type: type,\n      message: message\n    }\n  }\n}\n\nexport default notificationReducer","const initialState = {\n  bookInfo: null\n}\n\nconst ownedBookReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_OWNED_BOOK_INFO':\n      return action.data\n    case 'RESET_OWNED_BOOK_INFO':\n      return action.data  \n    default:\n      return state\n  }\n}\n\nexport const setOwnedBookInfo = (bookInfo) => {\n  return {\n    type: 'SET_OWNED_BOOK_INFO',\n    data: { bookInfo }\n  }\n}\n\nexport const resetOwnedBookInfo = () => {\n  console.log('reseting book...')\n  return {\n    type: 'RESET_OWNED_BOOK_INFO',\n    data: initialState\n  }\n}\n\nexport default ownedBookReducer","import { login } from '../Services/login'\nimport { addBook, updateBook, deleteBook, addQuote } from '../Services/books'\nimport { createUser } from '../Services/user'\nimport { setNotification } from './notificationReducer'\nimport { setOwnedBookInfo, resetOwnedBookInfo } from '../Reducers/ownedBookReducer'\n\nconst initialState = {\n  user: null,\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data\n    case 'LOGOUT':\n      return action.data\n    case 'CREATE_USER':\n      return action.data\n    case 'ADD_BOOK':\n      return {\n        ...state, \n        user_books: [...state.user_books, action.data]}\n    case 'UPDATE_BOOK':\n      return {\n        ...state,\n        user_books: state.user_books.map((book) => {\n          if (book.id === action.data.id) {\n            return {\n              ...book,\n              rating: action.data.rating,\n              review: action.data.review,\n              quotes: action.data.quotes,\n              read: action.data.read,\n              owned: action.data.owned\n            }\n          }\n          return book\n        })\n      }\n    case 'DELETE_BOOK':\n      return {\n        ...state,\n        user_books: state.user_books.filter((book) => book.id !== action.data)\n      }\n    case 'ADD_QUOTE':\n      return {\n        ...state,\n        user_books: state.user_books.map((book) => {\n          if (book.id === action.data.id) {\n            return {\n              ...book,\n              quotes: action.data.quotes\n            }\n          }\n          return book\n        })\n      }  \n    case 'RESET':\n      return initialState  \n    default:\n      return state\n  }\n}\n\nexport const addQuoteToBook = (id, quote, token) => {\n  return async dispatch => {\n    try {\n      const updatedBook = await addQuote(id, quote, token)\n      await dispatch(setOwnedBookInfo(updatedBook.data))\n      dispatch({\n        type: 'ADD_QUOTE',\n        data: updatedBook.data\n      })\n      \n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const tryUserCreation = ({ newUsername, newPassword }) => {\n  return async dispatch => {\n    try {\n      await createUser({ newUsername, newPassword })\n      dispatch({\n        type: 'CREATE_USER',\n        data: initialState\n      })\n      dispatch(setNotification('success', 'User was successfully created!'))\n    } catch (error) {\n      dispatch(setNotification('danger', error.response.data.error))\n    }\n  }\n}\n\nexport const tryLogin = ({ username, password }) => {\n  return async dispatch => {\n    try {\n      const user = await login({ username, password })\n      dispatch({\n        type: 'LOGIN',\n        data: user\n      })\n    } catch(error) {\n      dispatch(setNotification('danger', error.response.data.error))\n    }\n  }\n}\n\nexport const tryBookUpdate = (book, token) => {\n  return async dispatch => {\n    try {\n      const updatedBook = await updateBook(book, token)\n      await dispatch(setOwnedBookInfo(updatedBook.data)) \n      dispatch({\n        type: 'UPDATE_BOOK',\n        data: book\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const addBookToLibrary = (book, token) => {\n  return async dispatch => {\n    try {\n      const addedBook = await addBook(book, token)\n      await dispatch(setOwnedBookInfo(addedBook.data))\n      dispatch({\n        type: 'ADD_BOOK',\n        data: addedBook.data\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const deleteBookFromLibrary = (id, token) => {\n  return async dispatch => {\n    try {\n      await deleteBook(id, token)\n      await dispatch(resetOwnedBookInfo())\n      dispatch({\n        type: 'DELETE_BOOK',\n        data: id\n      })\n    }\n    catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const tryLogout = () => {\n  return {\n    type: 'LOGOUT',\n    data: initialState\n  }\n}\n\nexport default userReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport bookSearchReducer from './Reducers/bookSearchReducer'\nimport bookInfoReducer from './Reducers/bookInfoReducer'\nimport userReducer from './Reducers/userReducer'\nimport notificationReducer from './Reducers/notificationReducer'\nimport ownedBookReducer from './Reducers/ownedBookReducer'\n\nconst reducer = combineReducers({\n  bookSearch: bookSearchReducer,\n  bookInfo: bookInfoReducer,\n  ownedBook: ownedBookReducer,\n  login: userReducer,\n  notification: notificationReducer\n})\n\nconst saveUserState = (state) => {\n  try {\n    const userState = JSON.stringify(state)\n    localStorage.setItem('userState', userState)\n  } catch (error) {\n    return undefined\n  }\n}\n\nconst getUserState = () => {\n  try {\n    const userStateInStorage = localStorage.getItem('userState')\n    if (userStateInStorage === null) {\n      return undefined\n    }\n    return JSON.parse(userStateInStorage)\n  } catch (error) {\n    return undefined\n  }\n}\n\nconst stateFromLocalStorage = getUserState()\n\nconst store = createStore(\n  reducer,\n  stateFromLocalStorage,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nstore.subscribe(() => {\n  saveUserState(store.getState())\n})\n\nexport default store","import React from 'react'\nimport { Image } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { setBookInfo } from '../Reducers/bookInfoReducer'\n\nconst Book = ({ info }) => {\n  const dispatch = useDispatch()\n  \n  const setInfo = async () => {\n    dispatch(setBookInfo(info))\n  }\n\n    return (\n      <p>\n        <Link to={`/search/${info.etag}`}>\n          <Image src={info.volumeInfo.imageLinks.thumbnail} onClick={() => setInfo()} />\n        </Link>\n      </p>\n    )\n}\n\nexport default Book","import { Row, Col, Container, Spinner } from 'react-bootstrap';\nimport { useSelector } from 'react-redux'\nimport Book from './Book'\n\nconst BookGrid = () => {\n  const bookSearch = useSelector(state => state.bookSearch)\n\n  let size = Object.keys(bookSearch.books).length\n  let rows = []\n  let rowCounter = 0\n  let itemCounter = 0\n  let rowKey = 0\n\n  for (let i = 0; i < size; i ++) {\n    if (!(itemCounter % 6)) {\n      rowCounter ++\n      rows[rowCounter] = []\n    }\n\n    if (bookSearch.books[i].volumeInfo.imageLinks !== undefined) {\n      rows[rowCounter].push(bookSearch.books[i])\n      itemCounter ++\n    }\n  }\n  \n  return (\n    <Container fluid className=\"pt-3\">\n      {bookSearch.searching ?\n        <div \n          style={{ \n            position: 'absolute', left: '50%', top: '50%',\n            transform: 'translate(-50%, -50%)'\n        }}>\n          <Spinner animation=\"border\" variant=\"info\"  />\n        </div>\n        :\n        <div>\n          <h3 className=\"text-center pb-5\">Search results for <i>\"{bookSearch.filter}\"</i></h3>\n          {rows.map(row => {\n            return (\n              <Row className='text-center' key={rowKey ++}>\n                {row.map(book => {\n                  return (\n                    <Col sm={6} md={4} lg={2} key={book.etag}>\n                      <Book info={book} key={book.etag}/>\n                    </Col>\n                  )\n                })}\n              </Row>\n            )\n          })}\n        </div>\n      }\n      {/* <h3 className=\"text-center pb-5\">Search results for <i>\"{bookSearch.filter}\"</i></h3>\n      {rows.map(row => {\n        return (\n        <Row className='text-center' key={rowKey ++}>\n          {row.map(book => {\n            return (\n              <Col sm={6} md={4} lg={2} key={book.etag}>\n                <Book info={book} key={book.etag}/>\n              </Col>\n            )\n          })}\n        </Row>\n        )\n      })} */}\n    </Container>\n  )\n}\n\nexport default BookGrid","import React from 'react'\nimport { Navbar, Nav, NavDropdown, Form, Button } from 'react-bootstrap'\nimport { useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport { tryLogout } from '../Reducers/userReducer'\nimport { searchBooks, startSearch, initSearchResults } from '../Reducers/bookSearchReducer'\n\nconst Navigation = ({ showSort, sortDesc, sortAsc }) => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  \n  const handleLogout = () => {\n    dispatch(initSearchResults())\n    dispatch(tryLogout())\n  }\n\n  const fetchBooks = (event) => {\n    event.preventDefault()\n    const filter = event.target.filter.value\n    dispatch(startSearch())\n    history.push('/search')\n    dispatch(searchBooks(filter))\n    clearSearhBar()\n  }\n\n  const clearSearhBar = () => {\n    document.getElementById('search bar').reset()\n  }\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand as={Link} to={\"/\"}>My Library</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        {showSort && \n          <NavDropdown className=\"ml-auto\" title=\"Sort by\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item onClick={() => sortDesc('rating')} >Rating: Highest-Lowest</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => sortAsc('rating')}>Rating: Lowest-Highest</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => sortAsc('title')}>Title: A-Z</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => sortDesc('title')}>Title: Z-A</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => sortAsc('author')}>Author: A-Z</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => sortDesc('author')}>Author: Z-A</NavDropdown.Item>\n          </NavDropdown>\n        }\n        <Nav.Link as={Link} to={\"/search\"}>Book finder</Nav.Link>\n      </Nav>\n      <Nav className=\"ml-auto\">\n        <Form onSubmit={fetchBooks} inline id={'search bar'}>\n          <Form.Control name=\"filter\" type=\"text\" placeholder=\"Search from Google Books\" className=\"mr-2\" />\n          <Button type=\"submit\">Search</Button>\n        </Form>\n        <Nav.Link className=\"pl-5\" as={Link} to={\"/\"} onClick={handleLogout}>Logout</Nav.Link>\n      </Nav>\n    </Navbar>  \n  )\n}\n\nexport default Navigation","import { Alert } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { resetNotification } from '../Reducers/notificationReducer'\nimport '../custom-css.css'\n\nconst Notification = ({ variant }) => {\n  const dispatch = useDispatch()\n  const notifState = useSelector(state => state.notification)\n  \n  const handleShow = () => {\n    dispatch(resetNotification())\n  }\n\n  if (notifState !== null) {\n    return (\n      <Alert className=\"notification\" variant={notifState.type} onClose={handleShow} dismissible>\n        <Alert.Heading>\n          <strong>Oops!</strong>\n        </Alert.Heading>\n        <p>\n          {notifState.message}\n        </p>\n      </Alert>\n    )\n  }\n\n  return (\n    null\n  )\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport { Button, Form, Row, Col, Modal, Container, Card } from 'react-bootstrap'\nimport { useDispatch } from 'react-redux'\nimport { tryLogin, tryUserCreation } from '../Reducers/userReducer'\nimport Notification from '../Components/Notification'\nimport '../custom-css.css'\n\nconst Login = () => {\n  const dispatch = useDispatch()\n  const [show, setShow] = useState(false)\n  const handleClose = () => {\n    setShow(false)\n    setNewUsername('')\n    setNewPassword('')\n    setUsernameError(false)\n    setPasswordError(false)\n  }  \n  const handleShow = () => setShow(true)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [newUsername, setNewUsername] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n\n  const [usernameError, setUsernameError] = useState(false)\n  const [passwordError, setPasswordError] = useState(false)\n  \n  const handleLogin = async (event) => {\n    event.preventDefault()\n    dispatch(tryLogin({ username, password }))\n    setUsername('')\n    setPassword('')\n  }\n\n  const correctInput = (input, minLength) => {\n    if (input.length >= minLength) {\n      return true\n    }\n    return false\n  }\n\n  const handleUserCreation = async (event) => {\n    event.preventDefault()\n    if (!correctInput(newUsername, 5)) {\n      setUsernameError(true)\n    }\n    if (!correctInput(newPassword, 5)) {\n      setPasswordError(true)\n    }\n    else {\n      console.log(`Username: ${newUsername}, Password: ${newPassword}`)\n      dispatch(tryUserCreation({ newUsername, newPassword }))\n      handleClose()\n    }\n  }\n\n  const handleNewUsernameInput = (input) => {\n    setNewUsername(input)\n    if (correctInput(input, 5)) {\n      setUsernameError(false)\n    } else {\n      setUsernameError(true)\n    }\n  }\n\n  const handleNewPasswordInput = (input) => {\n    setNewPassword(input)\n    if(correctInput(input, 5)) {\n      setPasswordError(false)\n    } else {\n      setPasswordError(true)\n    }\n  }\n\n  return (\n    <Container fluid className=\"testi\">\n      <Notification className=\"notify\"/>\n        <Card className=\"card\" bg=\"light\" border=\"dark\">\n          <Card.Header className=\"text-center\"><h2>Login</h2></Card.Header>\n          <Card.Body>\n            <Form onSubmit={handleLogin}>\n              <Form.Group controlId=\"formBasicText\">\n                <Form.Label>Username</Form.Label>             \n                <Form.Control \n                  type=\"text\" \n                  name=\"usernameLogin\"\n                  value={username} \n                  placeholder=\"Username\"\n                  onChange={({ target }) => setUsername(target.value)}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                  type=\"password\" \n                  name=\"passwordLogin\"\n                  value={password} \n                  placeholder=\"Password\"\n                  onChange={({ target }) => setPassword(target.value)}\n                />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Login\n              </Button>{' '}\n              <Button variant=\"success\" onClick={handleShow} >\n                Create User\n              </Button>\n            </Form> \n          </Card.Body>\n        </Card>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false} \n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Register new user</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleUserCreation} >\n            <Form.Group >\n              <Form.Row>\n                <Form.Label>Username</Form.Label>\n              </Form.Row>\n              <Form.Row>\n                <Form.Control \n                  type=\"text\" \n                  name=\"usernameRegister\" \n                  value={newUsername} \n                  placeholder=\"Choose your username\" \n                  onChange={({ target }) => handleNewUsernameInput(target.value)} \n                />\n              </Form.Row>\n              {usernameError && \n                <Form.Row style={{color: 'red'}}>Username must be at least 5 characters long!</Form.Row>\n              }    \n            </Form.Group>\n            <Form.Group>\n              <Form.Row>\n                <Form.Label>Password</Form.Label>\n              </Form.Row>\n              <Form.Row>\n                <Form.Control \n                  type=\"password\" \n                  name=\"passwordRegister\" \n                  value={newPassword} \n                  placeholder=\"Choose a secure password\" \n                  onChange={({ target }) => handleNewPasswordInput(target.value)} \n                />\n              </Form.Row>\n              {passwordError && \n                <Form.Row style={{color: 'red'}}>Password must be at least 5 characters long!</Form.Row>\n              } \n            </Form.Group>\n            <Form.Group as={Row} >\n              <Col xs={3}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n              <Col xs={3} >\n                <Button variant=\"danger\" onClick={handleClose} >Cancel</Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </Container>\n  )\n}\n\nexport default Login","import { React, useState } from 'react'\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { addBookToLibrary } from '../Reducers/userReducer'\n\nconst BookInfo = () => {\n  const info = useSelector(state => state.bookInfo)\n  const token = useSelector(state => state.login.token)\n  const bookInfo = info.bookInfo\n  const [bookAdded, setAddedBook] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleBookAdding = () => {\n    dispatch(addBookToLibrary(bookInfo, token))\n    setAddedBook(true)\n  }\n\n  if (bookInfo === null) {\n    return (\n      <h2>undefined</h2>\n    )\n  }\n  \n  if (bookAdded) {\n    return (\n      <Redirect to={`/info/${bookInfo.volumeInfo.title}`}/>\n    )\n  }\n\n  // Korjaa näkymä, kun kirjalijoita enemmän kuin yksi!\n  return (\n    <Container className=\"pt-4 text-center\">\n      <h2>{bookInfo.volumeInfo.title}</h2>\n      <h3>{bookInfo.volumeInfo.subtitle}</h3>\n      <h5><i>{bookInfo.volumeInfo.authors}</i></h5>\n      <Row className=\"pt-4\">\n        <Col md={6}>\n          <Image src={bookInfo.volumeInfo.imageLinks.thumbnail} />\n        </Col>\n        <Col className=\"text-justify\">\n          {bookInfo.volumeInfo.description}\n        </Col>\n      </Row>\n      <Row className=\"pt-4\">\n        <Col>\n          <Button onClick={() => handleBookAdding()}>Add book</Button>\n        </Col>\n        <Col>\n        </Col>\n      </Row>\n    </Container>  \n  )\n}\n\nexport default BookInfo","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FaStar } from 'react-icons/fa'\nimport { tryBookUpdate } from '../Reducers/userReducer'\nimport '../custom-css.css'\n\nconst StarRating = ({ book }) => {\n  // const book = useSelector(state => state.ownedBook.bookInfo)\n  const dispatch = useDispatch()\n  const token = useSelector(state => state.login.token)\n  const [score, setScore] = useState(book.rating)\n  const [paintedStars, setPaintedStars] = useState(book.rating)\n  const stars = 5\n\n  // useEffect(() => {\n  //   setPaintedStars(book.rating)\n  //   setScore(book.rating)\n  // }, [book])\n\n  const handleScore = (value) => {\n    setScore(value)\n    book.rating = value\n    dispatch(tryBookUpdate(book, token))\n  }\n\n  return (\n    <div>\n      {[...Array(stars)].map((value, i) => {\n        const currentScore = i + 1\n        return (\n          <FaStar \n            className=\"pointer\" \n            key={i} \n            size={30} \n            color={paintedStars >= currentScore  ? 'orange' : 'gray'} \n            onClick={() => handleScore(currentScore)} \n            onMouseEnter={() => setPaintedStars(currentScore)}\n            onMouseLeave={() => setPaintedStars(score)}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default StarRating","import React from 'react'\nimport { Card, Col, Row } from 'react-bootstrap'\nimport StarRating from './StarRating'\nimport { Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { setOwnedBookInfo } from '../Reducers/ownedBookReducer'\n\nconst BookCard = ({ book }) => {\n  const dispatch = useDispatch()\n\n  const setInfo = (info) => {\n    console.log('setting info')\n    console.log(info)\n    dispatch(setOwnedBookInfo(info))\n  }\n\n  return (\n    <Card className=\"h-100 w-100\">\n      <Card.Body className=\"genre\">\n        <Row>\n          <Col className=\"pr-0\">\n            <Link to={`/${book.title}`} onClick={() => setInfo(book)} >\n              <img src={book.linkToCoverImage} alt=\"book cover\"/>\n            </Link>\n          </Col>\n          <Col className=\"pl-0\">\n            <Row>\n              <h5>{book.title}</h5>\n            </Row>\n            <Row>\n              <h6 className=\"text-muted\" ><i>by {book.author}</i></h6>\n            </Row>\n          </Col>\n        </Row>\n      </Card.Body>\n      <Card.Footer>\n        <Row className=\"float-right pr-2\">\n          <StarRating book={book} />\n        </Row>\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default BookCard","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport '../custom-css.css'\nimport BookCard from '../Components/BookCard'\nimport Navigation from '../Components/NavBar'\nimport Notification from '../Components/Notification'\n\nconst MyBooks = () => {\n  const books = useSelector(state => state.login.user_books)\n  const [sortedBooks, setSortedBooks] = useState([...books])\n\n  useEffect(() => {\n    sortDesc('rating')\n  }, [books])\n\n  const types = {\n    title: 'title',\n    author: 'author',\n    rating: 'rating'\n  }\n\n  const sortDesc= (field) => {\n    const type = types[field]\n    const tempArr = [...books]\n    tempArr.sort((bookA, bookB) => {\n      if (bookA[type] > bookB[type]) {\n        return -1\n      } else if (bookA[type] < bookB[type]) {\n        return 1\n      }\n      return 0\n    })\n    setSortedBooks(tempArr)\n  }\n\n  const sortAsc = (field) => {\n    const type = types[field]\n    const tempArr = [...books]\n    tempArr.sort((bookA, bookB) => {\n      if (bookA[type] > bookB[type]) {\n        return 1\n      } else if (bookA[type] < bookB[type]) {\n        return -1\n      }\n      return 0\n    })\n    setSortedBooks(tempArr)\n  }\n\n  return (\n    <>\n    <Navigation showSort={true} sortDesc={sortDesc} sortAsc={sortAsc} />\n    <Container fluid className=\"bookshelf\" >\n      <Row className=\"pb-3\">\n        {sortedBooks.map((book => {\n          return (\n            <Col sm={12} md={6} xl={4} className=\"pt-3\" key={book.id} >\n              <BookCard book={book} />\n            </Col>\n          )\n        }))}\n      </Row>\n    </Container>\n    </>\n  )\n}\n\nexport default MyBooks","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Tabs, Tab, Form, Button, Card } from 'react-bootstrap'\nimport { tryBookUpdate, addQuoteToBook } from '../Reducers/userReducer'\nimport { AiOutlineClose } from 'react-icons/ai'\n\nconst Review = ({ setShow }) => {\n  const book = useSelector(state => state.ownedBook.bookInfo)\n  const token = useSelector(state => state.login.token)\n  \n  const [review, setReview] = useState(book.review)\n  const [editReview, setEditReview] = useState(false)\n  const [quoteAdding, setQuoteAdding] = useState(false)\n  const [newQuote, setNewQuote] = useState(null)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    setReview(book.review)\n  }, [book])\n\n  const handleReview = async (event) => {\n    event.preventDefault()\n    const updatedBook = {\n      ...book,\n      review: review,\n    }\n    dispatch(tryBookUpdate(updatedBook, token))\n    setEditReview(false)\n    setQuoteAdding(false)\n  }\n\n  const handleNewQuote = async (event) => {\n    event.preventDefault()\n    dispatch(addQuoteToBook(book.id, newQuote, token))\n    setQuoteAdding(false)\n    setNewQuote(null)\n  }\n\n  const handleQuoteDelete = (id) => {\n    let filteredQuotes = book.quotes\n    for (let i = 0; i < filteredQuotes.length; i ++) {\n      if (filteredQuotes[i].id === id) {\n        filteredQuotes.splice(i, 1)\n        break\n      }\n    }\n    const updatedBook = {\n      ...book,\n      quotes: filteredQuotes\n    }\n    dispatch(tryBookUpdate(updatedBook, token))\n  }\n\n  return (\n    <Tabs>\n      <Tab eventKey=\"review\" title=\"Review\">\n        {!editReview ?\n          <Row className=\"pt-2\">\n            <Col xs={2} sm={1}>\n              <Button variant=\"link\" onClick={() => setEditReview(!editReview)}>Edit</Button>\n            </Col>\n            <Col xs={10} sm={11}>\n              {review}\n            </Col>\n          </Row>\n          :\n          <Form onSubmit={handleReview} >\n            <Form.Group>\n              <Form.Control \n                as=\"textarea\" \n                rows={10} \n                value={review} \n                onChange={e => setReview(e.target.value)} \n              />\n            </Form.Group>\n            <Button type=\"submit\" className=\"mr-1\">Save changes</Button>\n            <Button variant=\"secondary\" onClick={() => setEditReview(false)}>Cancel</Button> \n          </Form>\n        }\n      </Tab>\n      <Tab eventKey=\"quotes\" title=\"Quotes\">\n        {!quoteAdding ?\n        <Row className=\"pt-2\">\n          <Col xs={12} sm={2}>\n            <Button variant=\"link\" onClick={() => setQuoteAdding(!quoteAdding)} >Add quote</Button>\n          </Col>\n          <Col xs={12} sm={10}>\n            {book.quotes.map(quote => {\n              return (\n                <Row className=\"mb-3\">\n                  <Col key={quote.id}>\n                    <Card >\n                      <Card.Header>\n                        <Row>\n                          <Col className=\"pr-0 text-right\">\n                            <AiOutlineClose className=\"pointer\" onClick={() => handleQuoteDelete(quote.id)} />\n                          </Col>\n                        </Row>\n                      </Card.Header>\n                      <Card.Body className=\"overflow-auto\" >\n                        <i> {quote.quote}</i>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                </Row>\n              )\n            })}\n          </Col>\n          </Row>\n          :\n          <Form onSubmit={handleNewQuote}>\n            <Form.Group>\n              <Form.Control \n                as=\"textarea\" \n                rows={10} \n                onChange={e => setNewQuote(e.target.value)} \n              />\n            </Form.Group>\n            <Button type=\"submit\" className=\"mr-1\">Save quote</Button>\n            <Button variant=\"secondary\" onClick={() => setQuoteAdding(false)}>Cancel</Button>\n          </Form>\n        }\n      </Tab>\n      <Tab eventKey=\"options\" title=\"Options\">\n        <Row>\n          <Col className=\"pt-5 text-center\">\n            <Button variant=\"link\" style={{ color: 'red' }} onClick={() => setShow(true)} >\n              Delete Book\n            </Button>\n          </Col>\n        </Row>\n      </Tab>\n    </Tabs>\n  )\n}\n\nexport default Review","import React from 'react'\nimport { Button, Modal, Row } from 'react-bootstrap'\n\n\nconst DeleteConfirmation = ({ show, setShow, book, handleDelete }) => {\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => setShow(false)}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Delete {book.title} by {book.author} from the library?</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Row>\n          <Button className=\"mr-1\" variant=\"danger\" onClick={handleDelete}>Delete</Button>\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>Cancel</Button>\n        </Row>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default DeleteConfirmation","import { React, useEffect, useState } from 'react'\nimport { Container, Jumbotron, Row, Col, Form } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport StarRating from '../Components/StarRating'\nimport Review from '../Components/Review'\nimport { deleteBookFromLibrary, tryBookUpdate } from '../Reducers/userReducer'\nimport DeleteConfirmation from '../Components/DeleteConfirmation'\nimport { Redirect } from 'react-router-dom'\n\nconst OwnedBookView = () => {\n  const book = useSelector(state => state.ownedBook.bookInfo)\n  const token = useSelector(state => state.login.token)\n  const [bookRead, setBookRead] = useState(() => book === null ? null : book.read)\n  const [bookOwned, setBookOwned] = useState(() => book === null ? null : book.owned)\n  const [show, setShow] = useState(false)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (book !== null) {\n      setBookRead(book.read)\n      setBookOwned(book.owned)\n    }\n  }, [book])\n\n  const handleDelete = async () => {\n    dispatch(deleteBookFromLibrary(book.id, token))\n    setShow(false)\n  }\n\n  const handleRead = () => {\n    const updatedBook = {\n      ...book,\n      read: !book.read\n    }\n    setBookRead(!book.read)\n    dispatch(tryBookUpdate(updatedBook, token))\n  }\n\n  const handleOwned = () => {\n    const updatedBook = {\n      ...book,\n      owned: !book.owned\n    }\n    setBookOwned(!book.owned)\n    dispatch(tryBookUpdate(updatedBook, token))\n  }\n\n  if (book === null) {\n    return (\n      <Redirect to='/' />\n    )\n  }\n \n  return (\n    <>\n    <Jumbotron fluid>\n      <Container>\n        <Row>\n          <Col xs={7}>\n            <h1>{book.title}</h1>\n            <h5><i>{book.author}</i></h5>\n            <StarRating book={book} />\n            <Form className=\"pt-3\">\n              <Form.Check\n                inline \n                type=\"checkbox\"\n                id=\"read\"\n                label=\"Read\"\n                checked={bookRead}\n                onChange={handleRead}\n              />\n              <Form.Check\n                inline \n                type=\"checkbox\"\n                id=\"owned\"\n                label=\"Owned\"\n                checked={bookOwned}\n                onChange={handleOwned}\n              />\n            </Form>\n          </Col>\n          <Col xs={5} >\n            <img src={book.linkToCoverImage} alt=\"cover\"/>\n          </Col>\n        </Row>\n      </Container>\n\n    </Jumbotron>\n    <Container>\n      <DeleteConfirmation show={show} setShow={setShow} book={book} handleDelete={handleDelete} />\n      <Review setShow={setShow} />\n    </Container>\n    </>\n  )\n}\n\nexport default OwnedBookView","import Searchbar from './Components/SearchBar'\nimport BookGrid from './Components/BookGrid'\nimport Navigation from './Components/NavBar'\nimport Login from './Views/Login'\nimport BookInfo from './Views/BookInfo'\nimport MyBooks from './Views/MyBooks'\nimport OwnedBookView from './Views/OwnedBookView'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport './custom-css.css'\n\nconst App = () => {\n  const user = useSelector(state => state.login.user)\n\n  if (user === null) {\n    return (\n      <Login />\n    )\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/search/:etag\">\n          <Navigation showSort={false} />\n          <BookInfo />\n        </Route>\n        <Route path=\"/search\">\n          <Navigation showSort={false}/>\n          {/* <h2 className=\"mt-3 text-center\">Google Books Search</h2>\n          <Searchbar /> */}\n          <BookGrid />\n        </Route>\n        <Route path=\"/:title\">\n          <Navigation showSort={false}/>\n          <OwnedBookView />\n        </Route>\n        <Route path=\"/\">\n          <MyBooks />\n        </Route>\n      </Switch>       \n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}