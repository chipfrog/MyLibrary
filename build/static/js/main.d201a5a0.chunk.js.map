{"version":3,"sources":["Services/books.js","Reducers/bookSearchReducer.js","Reducers/bookInfoReducer.js","Services/login.js","Services/user.js","Reducers/notificationReducer.js","Reducers/ownedBookReducer.js","Reducers/libraryReducer.js","Reducers/userReducer.js","store.js","Components/Book.js","Components/BookGrid.js","Components/Navigation.js","Components/Notification.js","Views/Login.js","Components/Category.js","Views/BookInfo.js","Components/StarRating.js","Components/BookCard.js","Views/MyBooks.js","Components/Review.js","Components/DeleteConfirmation.js","Views/OwnedBookView.js","App.js","index.js"],"names":["getBooks","filter","a","axios","get","result","console","log","data","updateBook","bookInfo","token","bearerToken","config","headers","Authorization","bookData","id","review","rating","read","owned","quotes","categories","put","response","addQuote","quote","book_id","post","addBook","title","volumeInfo","author","authors","linkToCoverImage","imageLinks","thumbnail","deleteBook","delete","initialState","books","undefined","searching","bookSearchReducer","state","action","type","bookInfoReducer","login","credentials","res","createUser","userInfo","user","show","message","setNotification","notificationReducer","setOwnedBookInfo","ownedBookReducer","scrollToBottom","highlightBook","libraryReducer","addQuoteToBook","dispatch","updatedBook","tryUserCreation","newUsername","newPassword","error","tryLogin","username","password","tryBookUpdate","book","deleteBookFromLibrary","userReducer","user_books","map","reducer","combineReducers","bookSearch","ownedBook","notification","library","stateFromLocalStorage","userStateInStorage","localStorage","getItem","JSON","parse","getUserState","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","userState","stringify","setItem","saveUserState","getState","Book","info","useDispatch","setInfo","to","etag","Image","src","onClick","BookGrid","useSelector","size","Object","keys","length","rows","rowCounter","itemCounter","rowKey","i","push","Container","fluid","className","style","position","left","top","transform","Spinner","animation","variant","row","Row","Col","sm","md","lg","Navigation","showSort","sortDesc","sortAsc","history","useHistory","clearSearhBar","document","getElementById","reset","Navbar","fixed","bg","Brand","as","Link","Nav","NavDropdown","Item","Form","onSubmit","event","preventDefault","target","value","searchBooks","inline","Control","name","placeholder","Button","Notification","notifState","setTimeout","Alert","onClose","dismissible","Heading","Login","useState","setShow","handleClose","setNewUsername","setNewPassword","setUsernameError","setPasswordError","setUsername","setPassword","usernameError","passwordError","handleLogin","correctInput","input","minLength","handleUserCreation","Card","border","Header","Body","Group","controlId","Label","onChange","Modal","onHide","backdrop","keyboard","closeButton","Title","color","xs","Category","handleCategoryDelete","Badge","pill","BookInfo","bookAdded","setAddedBook","handleBookAdding","addedBook","addBookToLibrary","Jumbotron","subtitle","averageRating","ratingsCount","alt","description","StarRating","score","setScore","paintedStars","setPaintedStars","Array","currentScore","handleScore","onMouseEnter","onMouseLeave","BookCard","Footer","MyBooks","targetedBook","sortedBooks","setSortedBooks","showAlert","setShowAlert","bottomRef","useRef","useEffect","current","scrollIntoView","behavior","types","field","tempArr","sort","bookA","bookB","xl","ref","Review","setReview","editReview","setEditReview","quoteAdding","setQuoteAdding","newQuote","setNewQuote","categoryAdding","setCategoryAdding","newCategory","setNewCategory","handleReview","handleNewQuote","handleQuoteDelete","filteredQuotes","splice","handleNewCategory","concat","category","filteredCategories","Tabs","Tab","eventKey","e","DeleteConfirmation","handleDelete","OwnedBookView","bookRead","setBookRead","bookOwned","setBookOwned","Check","label","checked","App","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.d201a5a0.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const getBooks = async (filter) => {\n  const result = await axios.get(`/api/googlebooks/${filter}`)\n  console.log(result.data)\n  return result.data\n}\n\nexport const updateBook = async (bookInfo, token) => {\n  const bearerToken = `bearer ${token}`\n\n  const config = {\n    headers: { Authorization: bearerToken }\n  }\n\n  const bookData = {\n    id: bookInfo.id,\n    review: bookInfo.review,\n    rating: bookInfo.rating,\n    read: bookInfo.read,\n    owned: bookInfo.owned,\n    quotes: bookInfo.quotes,\n    categories: bookInfo.categories\n  }\n  const response = await axios.put(`/api/googleBooks/edit`, bookData, config)\n  return response\n}\n\nexport const addQuote = async (id, quote, token) => {\n  const bearerToken = `bearer ${token}`\n  const config = {\n    headers: { Authorization: bearerToken }\n  }\n  const data = {\n    book_id: id,\n    quote: quote\n  }\n\n  const response = await axios.post(`/api/googleBooks/addquote`, data, config)\n  return response\n\n}\n\nexport const addBook = async (bookInfo, token) => {\n  const bearerToken = `bearer ${token}`\n\n  const config = {\n    headers: { Authorization: bearerToken }\n  }\n\n  const bookData = {\n    title: bookInfo.volumeInfo.title,\n    author: bookInfo.volumeInfo.authors[0],\n    linkToCoverImage: bookInfo.volumeInfo.imageLinks.thumbnail,\n    review: bookInfo.review,\n    rating: bookInfo.rating,\n    read: bookInfo.read,\n    quotes: bookInfo.quotes,\n    categories: bookInfo.volumeInfo.categories\n  }\n\n  const response = await axios.post(`/api/googlebooks`, bookData, config)\n  console.log(`Lisätty kirja: ${response.data.title}`)\n  return response\n}\n\nexport const deleteBook = async (id, token) => {\n  const bearerToken = `bearer ${token}`\n\n  const config = {\n    headers: { Authorization: bearerToken }\n  }\n  const response = await axios.delete(`/api/googlebooks/delete`, { data: { config, id } })\n  console.log(response)\n}\n\n\n\n\n","import { getBooks } from '../Services/books'\n\nconst initialState = {\n  books: [],\n  filter: undefined,\n  searching: false\n}\n\nconst bookSearchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'BOOK_SEARCH':\n      return {\n        books: action.data.books,\n        filter: action.data.filter,\n        searching: false\n      }\n    case 'SEARCH_STARTED':\n      return {\n        books: [],\n        filter: undefined,\n        searching: true\n      }\n    case 'INIT_SEARCH_RESULTS':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const startSearch = () => {\n  return {\n    type: 'SEARCH_STARTED'\n  }\n} \n\nexport const initSearchResults = () => {\n  return {\n    type: 'INIT_SEARCH_RESULTS',\n    data: initialState\n  }\n}\n\nexport const searchBooks = (filter) => {\n  return async dispatch => {\n    const books = await getBooks(filter)\n    dispatch({\n      type: 'BOOK_SEARCH',\n      data: { books, filter }\n    })\n  }\n}\n\nexport default bookSearchReducer","const bookInfoReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_BOOK_INFO':\n      return action.data\n    case 'RESET_BOOK_INFO':\n      return null  \n    default:\n      return state\n  }\n}\n\nexport const setBookInfo = (bookInfo) => {\n  return {\n    type: 'SET_BOOK_INFO',\n    data: { bookInfo }\n  }\n}\n\nexport default bookInfoReducer","import axios from 'axios'\n\nexport const login = async (credentials) => {\n  const res = await axios.post(`/api/login`, credentials)\n  return res.data\n}\n\n","import axios from 'axios'\n\nexport const getUser = async (token) => {\n  const bearerToken = `bearer ${token}`\n  console.log(`token: ${bearerToken}`)\n\n  const config = {\n    headers: { Authorization: bearerToken }\n  }\n  const user = await axios.get(`/api/user`, config)\n  return user.data\n}\n\nexport const createUser = async (userInfo) => {\n  const user = await axios.post(`/api/user`, userInfo)\n  console.log(`User creation: ${user.data}`)\n  return user.data\n}","const initialState = {\n  type: null,\n  show: false,\n  message: ''\n}\n\n\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      return action.data\n    case 'RESET_NOTIFICATION':\n      return action.data \n    default:\n      return state  \n  }\n}\n\nexport const resetNotification = () => {\n  return {\n    type: 'RESET_NOTIFICATION',\n    data: {\n      type: null,\n      show: false,\n      message: ''\n    }\n  }\n}\n\nexport const setNotification = (type, message) => {\n  return {\n    type: 'SET_NOTIFICATION',\n    data: {\n      type: type,\n      show: true,\n      message: message\n    }\n  }\n}\n\nexport default notificationReducer","const initialState = {\n  bookInfo: null\n}\n\nconst ownedBookReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_OWNED_BOOK_INFO':\n      return action.data\n    case 'RESET_OWNED_BOOK_INFO':\n      return action.data  \n    default:\n      return state\n  }\n}\n\nexport const setOwnedBookInfo = (bookInfo) => {\n  return {\n    type: 'SET_OWNED_BOOK_INFO',\n    data: { bookInfo }\n  }\n}\n\nexport const resetOwnedBookInfo = () => {\n  console.log('reseting book...')\n  return {\n    type: 'RESET_OWNED_BOOK_INFO',\n    data: initialState\n  }\n}\n\nexport default ownedBookReducer","const initialState = {\n  scrollToBottom: false,\n  highlightBook: false,\n  id: null\n}\n\nconst libraryReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'NEW_BOOK_ADDED':\n      return action.data\n    case 'RESET_LIBRARY':\n      return initialState\n    default:\n      return state\n  }\n}\n\nexport const targetAddedBook = (id) => {\n  return {\n    type: 'NEW_BOOK_ADDED',\n    data: {\n      scrollToBottom: true,\n      highlightBook: true,\n      id: id\n    }\n  }\n}\n\nexport const resetLibraryView = () => {\n  return {\n    type: 'RESET_LIBRARY'\n  }\n}\n\nexport default libraryReducer ","import { login } from '../Services/login'\nimport { addBook, updateBook, deleteBook, addQuote } from '../Services/books'\nimport { createUser } from '../Services/user'\nimport { setNotification } from './notificationReducer'\nimport { setOwnedBookInfo, resetOwnedBookInfo } from '../Reducers/ownedBookReducer'\nimport { targetAddedBook } from './libraryReducer'\n\nconst initialState = {\n  user: null,\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data\n    case 'LOGOUT':\n      return action.data\n    case 'CREATE_USER':\n      return action.data\n    case 'ADD_BOOK':\n      return {\n        ...state, \n        user_books: [...state.user_books, action.data]}\n    case 'UPDATE_BOOK':\n      return {\n        ...state,\n        user_books: state.user_books.map((book) => {\n          if (book.id === action.data.id) {\n            return {\n              ...book,\n              rating: action.data.rating,\n              review: action.data.review,\n              quotes: action.data.quotes,\n              categories: action.data.categories,\n              read: action.data.read,\n              owned: action.data.owned\n            }\n          }\n          return book\n        })\n      }\n    case 'DELETE_BOOK':\n      return {\n        ...state,\n        user_books: state.user_books.filter((book) => book.id !== action.data)\n      }\n    case 'ADD_QUOTE':\n      return {\n        ...state,\n        user_books: state.user_books.map((book) => {\n          if (book.id === action.data.id) {\n            return {\n              ...book,\n              quotes: action.data.quotes\n            }\n          }\n          return book\n        })\n      }  \n    case 'RESET':\n      return initialState  \n    default:\n      return state\n  }\n}\n\nexport const addQuoteToBook = (id, quote, token) => {\n  return async dispatch => {\n    try {\n      const updatedBook = await addQuote(id, quote, token)\n      await dispatch(setOwnedBookInfo(updatedBook.data))\n      dispatch({\n        type: 'ADD_QUOTE',\n        data: updatedBook.data\n      })\n      \n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const tryUserCreation = ({ newUsername, newPassword }) => {\n  return async dispatch => {\n    try {\n      await createUser({ newUsername, newPassword })\n      dispatch({\n        type: 'CREATE_USER',\n        data: initialState\n      })\n      dispatch(setNotification('success', 'User was successfully created!'))\n    } catch (error) {\n      dispatch(setNotification('danger', error.response.data.error))\n    }\n  }\n}\n\nexport const tryLogin = ({ username, password }) => {\n  return async dispatch => {\n    try {\n      const user = await login({ username, password })\n      dispatch({\n        type: 'LOGIN',\n        data: user\n      })\n    } catch(error) {\n      dispatch(setNotification('danger', error.response.data.error))\n    }\n  }\n}\n\nexport const tryBookUpdate = (book, token) => {\n  return async dispatch => {\n    try {\n      const updatedBook = await updateBook(book, token)\n      await dispatch(setOwnedBookInfo(updatedBook.data)) \n      dispatch({\n        type: 'UPDATE_BOOK',\n        data: book\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const addBookToLibrary = (book, token) => {\n  return async dispatch => {\n    try {\n      const addedBook = await addBook(book, token)\n      await dispatch(setOwnedBookInfo(addedBook.data))\n      dispatch({\n        type: 'ADD_BOOK',\n        data: addedBook.data\n      })\n      console.log(addedBook.data)\n      dispatch(setNotification('success', `${addedBook.data.title} added to the library!`))\n      dispatch(targetAddedBook(addedBook.data.id))\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const deleteBookFromLibrary = (id, token) => {\n  return async dispatch => {\n    try {\n      await deleteBook(id, token)\n      await dispatch(resetOwnedBookInfo())\n      dispatch({\n        type: 'DELETE_BOOK',\n        data: id\n      })\n    }\n    catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const tryLogout = () => {\n  return {\n    type: 'LOGOUT',\n    data: initialState\n  }\n}\n\nexport default userReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport bookSearchReducer from './Reducers/bookSearchReducer'\nimport bookInfoReducer from './Reducers/bookInfoReducer'\nimport userReducer from './Reducers/userReducer'\nimport notificationReducer from './Reducers/notificationReducer'\nimport ownedBookReducer from './Reducers/ownedBookReducer'\nimport libraryReducer from './Reducers/libraryReducer'\n\nconst reducer = combineReducers({\n  bookSearch: bookSearchReducer,\n  bookInfo: bookInfoReducer,\n  ownedBook: ownedBookReducer,\n  login: userReducer,\n  notification: notificationReducer,\n  library: libraryReducer\n})\n\nconst saveUserState = (state) => {\n  try {\n    const userState = JSON.stringify(state)\n    localStorage.setItem('userState', userState)\n  } catch (error) {\n    return undefined\n  }\n}\n\nconst getUserState = () => {\n  try {\n    const userStateInStorage = localStorage.getItem('userState')\n    if (userStateInStorage === null) {\n      return undefined\n    }\n    return JSON.parse(userStateInStorage)\n  } catch (error) {\n    return undefined\n  }\n}\n\nconst stateFromLocalStorage = getUserState()\n\nconst store = createStore(\n  reducer,\n  stateFromLocalStorage,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nstore.subscribe(() => {\n  saveUserState(store.getState())\n})\n\nexport default store","import React from 'react'\nimport { Image } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { setBookInfo } from '../Reducers/bookInfoReducer'\n\nconst Book = ({ info }) => {\n  const dispatch = useDispatch()\n  \n  const setInfo = async () => {\n    dispatch(setBookInfo(info))\n  }\n\n    return (\n      <p>\n        <Link to={`/search/${info.etag}`}>\n          <Image src={info.volumeInfo.imageLinks.thumbnail} onClick={() => setInfo()} />\n        </Link>\n      </p>\n    )\n}\n\nexport default Book","import { Row, Col, Container, Spinner } from 'react-bootstrap';\nimport { useSelector } from 'react-redux'\nimport Book from './Book'\n\nconst BookGrid = () => {\n  const bookSearch = useSelector(state => state.bookSearch)\n\n  let size = Object.keys(bookSearch.books).length\n  let rows = []\n  let rowCounter = 0\n  let itemCounter = 0\n  let rowKey = 0\n\n  for (let i = 0; i < size; i ++) {\n    if (!(itemCounter % 6)) {\n      rowCounter ++\n      rows[rowCounter] = []\n    }\n\n    if (bookSearch.books[i].volumeInfo.imageLinks !== undefined) {\n      rows[rowCounter].push(bookSearch.books[i])\n      itemCounter ++\n    }\n  }\n  \n  return (\n    <Container fluid className=\"pt-3\">\n      {bookSearch.searching ?\n        <div \n          style={{ \n            position: 'absolute', left: '50%', top: '50%',\n            transform: 'translate(-50%, -50%)'\n        }}>\n          <Spinner animation=\"border\" variant=\"info\"  />\n        </div>\n        :\n        <div>\n          <h3 className=\"text-center pb-5\">Search results for <i>\"{bookSearch.filter}\"</i></h3>\n          {rows.map(row => {\n            return (\n              <Row className='text-center' key={rowKey ++}>\n                {row.map(book => {\n                  return (\n                    <Col sm={6} md={4} lg={2} key={book.etag}>\n                      <Book info={book} key={book.etag}/>\n                    </Col>\n                  )\n                })}\n              </Row>\n            )\n          })}\n        </div>\n      }\n      {/* <h3 className=\"text-center pb-5\">Search results for <i>\"{bookSearch.filter}\"</i></h3>\n      {rows.map(row => {\n        return (\n        <Row className='text-center' key={rowKey ++}>\n          {row.map(book => {\n            return (\n              <Col sm={6} md={4} lg={2} key={book.etag}>\n                <Book info={book} key={book.etag}/>\n              </Col>\n            )\n          })}\n        </Row>\n        )\n      })} */}\n    </Container>\n  )\n}\n\nexport default BookGrid","import React from 'react'\nimport { Navbar, Nav, NavDropdown, Form, Button } from 'react-bootstrap'\nimport { useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport { tryLogout } from '../Reducers/userReducer'\nimport { searchBooks, startSearch, initSearchResults } from '../Reducers/bookSearchReducer'\nimport '../custom-css.css'\n\nconst Navigation = ({ showSort, sortDesc, sortAsc }) => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  \n  const handleLogout = () => {\n    dispatch(initSearchResults())\n    dispatch(tryLogout())\n  }\n\n  const fetchBooks = (event) => {\n    event.preventDefault()\n    const filter = event.target.filter.value\n    dispatch(startSearch())\n    history.push('/search')\n    dispatch(searchBooks(filter))\n    clearSearhBar()\n  }\n\n  const clearSearhBar = () => {\n    document.getElementById('search bar').reset()\n  }\n\n  return (\n    <Navbar className=\"navigation\" fixed=\"top\" bg=\"dark\" variant=\"dark\" >\n      <Navbar.Brand as={Link} to={\"/\"}>My Library</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        {showSort && \n          <NavDropdown className=\"ml-auto\" title=\"Sort by\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item onClick={() => sortDesc('rating')} >Rating: Highest-Lowest</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => sortAsc('rating')}>Rating: Lowest-Highest</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => sortAsc('title')}>Title: A-Z</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => sortDesc('title')}>Title: Z-A</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => sortAsc('author')}>Author: A-Z</NavDropdown.Item>\n            <NavDropdown.Item onClick={() => sortDesc('author')}>Author: Z-A</NavDropdown.Item>\n          </NavDropdown>\n        }\n        <Nav.Link as={Link} to={\"/search\"}>Book finder</Nav.Link>\n      </Nav>\n      <Nav className=\"ml-auto\">\n        <Form onSubmit={fetchBooks} inline id={'search bar'}>\n          <Form.Control name=\"filter\" type=\"text\" placeholder=\"Search from Google Books\" className=\"mr-2\" />\n          <Button type=\"submit\">Search</Button>\n        </Form>\n        <Nav.Link className=\"pl-5\" as={Link} to={\"/\"} onClick={handleLogout}>Logout</Nav.Link>\n      </Nav>\n    </Navbar>  \n  )\n}\n\nexport default Navigation","import { Alert } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { resetNotification } from '../Reducers/notificationReducer'\nimport '../custom-css.css'\n\nconst Notification = () => {\n  const dispatch = useDispatch()\n  const notifState = useSelector(state => state.notification)\n  \n  const handleShow = () => {\n    dispatch(resetNotification())\n  }\n\n  if (notifState !== null && notifState.show) {\n    setTimeout(() => {\n      dispatch(resetNotification())\n    }, 3000)\n\n    return (\n      <Alert className=\"notification\" variant={notifState.type} onClose={handleShow} dismissible>\n        <Alert.Heading>\n          {notifState.type === 'danger' ?\n            <strong>Oops!</strong>\n            :\n            <strong>You're awesome!</strong>\n          }\n        </Alert.Heading>\n        <p>\n          {notifState.message}\n        </p>\n      </Alert>\n    )\n  }\n\n  return (\n    null\n  )\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport { Button, Form, Row, Col, Modal, Container, Card } from 'react-bootstrap'\nimport { useDispatch } from 'react-redux'\nimport { tryLogin, tryUserCreation } from '../Reducers/userReducer'\nimport Notification from '../Components/Notification'\nimport '../custom-css.css'\n\nconst Login = () => {\n  const dispatch = useDispatch()\n  const [show, setShow] = useState(false)\n  const handleClose = () => {\n    setShow(false)\n    setNewUsername('')\n    setNewPassword('')\n    setUsernameError(false)\n    setPasswordError(false)\n  }  \n  const handleShow = () => setShow(true)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [newUsername, setNewUsername] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n\n  const [usernameError, setUsernameError] = useState(false)\n  const [passwordError, setPasswordError] = useState(false)\n  \n  const handleLogin = async (event) => {\n    event.preventDefault()\n    dispatch(tryLogin({ username, password }))\n    setUsername('')\n    setPassword('')\n  }\n\n  const correctInput = (input, minLength) => {\n    if (input.length >= minLength) {\n      return true\n    }\n    return false\n  }\n\n  const handleUserCreation = async (event) => {\n    event.preventDefault()\n    if (!correctInput(newUsername, 5)) {\n      setUsernameError(true)\n    }\n    if (!correctInput(newPassword, 5)) {\n      setPasswordError(true)\n    }\n    else {\n      console.log(`Username: ${newUsername}, Password: ${newPassword}`)\n      dispatch(tryUserCreation({ newUsername, newPassword }))\n      handleClose()\n    }\n  }\n\n  const handleNewUsernameInput = (input) => {\n    setNewUsername(input)\n    if (correctInput(input, 5)) {\n      setUsernameError(false)\n    } else {\n      setUsernameError(true)\n    }\n  }\n\n  const handleNewPasswordInput = (input) => {\n    setNewPassword(input)\n    if(correctInput(input, 5)) {\n      setPasswordError(false)\n    } else {\n      setPasswordError(true)\n    }\n  }\n\n  return (\n    <Container fluid className=\"testi\">\n      <Notification className=\"notify\"/>\n        <Card className=\"card\" bg=\"light\" border=\"dark\">\n          <Card.Header className=\"text-center\"><h2>Login</h2></Card.Header>\n          <Card.Body>\n            <Form onSubmit={handleLogin}>\n              <Form.Group controlId=\"formBasicText\">\n                <Form.Label>Username</Form.Label>             \n                <Form.Control \n                  type=\"text\" \n                  name=\"usernameLogin\"\n                  value={username} \n                  placeholder=\"Username\"\n                  onChange={({ target }) => setUsername(target.value)}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                  type=\"password\" \n                  name=\"passwordLogin\"\n                  value={password} \n                  placeholder=\"Password\"\n                  onChange={({ target }) => setPassword(target.value)}\n                />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Login\n              </Button>{' '}\n              <Button variant=\"success\" onClick={handleShow} >\n                Create User\n              </Button>\n            </Form> \n          </Card.Body>\n        </Card>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false} \n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Register new user</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleUserCreation} >\n            <Form.Group >\n              <Form.Row>\n                <Form.Label>Username</Form.Label>\n              </Form.Row>\n              <Form.Row>\n                <Form.Control \n                  type=\"text\" \n                  name=\"usernameRegister\" \n                  value={newUsername} \n                  placeholder=\"Choose your username\" \n                  onChange={({ target }) => handleNewUsernameInput(target.value)} \n                />\n              </Form.Row>\n              {usernameError && \n                <Form.Row style={{color: 'red'}}>Username must be at least 5 characters long!</Form.Row>\n              }    \n            </Form.Group>\n            <Form.Group>\n              <Form.Row>\n                <Form.Label>Password</Form.Label>\n              </Form.Row>\n              <Form.Row>\n                <Form.Control \n                  type=\"password\" \n                  name=\"passwordRegister\" \n                  value={newPassword} \n                  placeholder=\"Choose a secure password\" \n                  onChange={({ target }) => handleNewPasswordInput(target.value)} \n                />\n              </Form.Row>\n              {passwordError && \n                <Form.Row style={{color: 'red'}}>Password must be at least 5 characters long!</Form.Row>\n              } \n            </Form.Group>\n            <Form.Group as={Row} >\n              <Col xs={3}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n              <Col xs={3} >\n                <Button variant=\"danger\" onClick={handleClose} >Cancel</Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </Container>\n  )\n}\n\nexport default Login","import { Badge, Row, Col } from \"react-bootstrap\"\nimport { AiOutlineClose } from 'react-icons/ai'\n\n\nconst Category = ({ name, handleCategoryDelete, owned }) => {\n\n  return (\n    <h4>\n      <Badge pill className=\"mr-2\" variant=\"success\">\n        {owned\n          ?\n          <Row>\n            <Col>\n              {name}  \n            </Col>\n            <Col className=\"pr-1 mb-1 text-right\">\n              <AiOutlineClose size={20} className=\"pointer\" onClick={handleCategoryDelete} />\n            </Col>                    \n          </Row>\n          :\n          <Row>\n            <Col>\n              {name}\n            </Col>\n          </Row>\n        }\n      </Badge>\n    </h4>\n    \n  )\n}\n\nexport default Category","import { React, useState } from 'react'\nimport { Container, Row, Col, Jumbotron, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { addBookToLibrary } from '../Reducers/userReducer'\nimport '../custom-css.css'\nimport Category from '../Components/Category'\n\nconst BookInfo = () => {\n  const info = useSelector(state => state.bookInfo)\n  const token = useSelector(state => state.login.token)\n  const bookInfo = info.bookInfo\n  const [bookAdded, setAddedBook] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleBookAdding = () => {\n    dispatch(addBookToLibrary(bookInfo, token))\n    setAddedBook(true)\n  }\n\n  if (bookInfo === null) {\n    return (\n      <h2>undefined</h2>\n    )\n  }\n  \n  if (bookAdded) {\n    return (\n      <Redirect to={'/'}/>\n    )\n  }\n\n  // Korjaa näkymä, kun kirjalijoita enemmän kuin yksi!\n  return (\n    <>\n      <Jumbotron fluid>\n        <Container className=\"jumbo\">\n          <Row>\n            <Col xs={7}>\n              <h2>{bookInfo.volumeInfo.title}</h2>\n              <h3>{bookInfo.volumeInfo.subtitle}</h3>\n              <h5 className=\"pb-5\"><i>{bookInfo.volumeInfo.authors}</i></h5>\n              {bookInfo.volumeInfo.averageRating === undefined\n                ? <h6>No reviews yet...</h6>\n                :\n                  <>\n                    <h5>Score {bookInfo.volumeInfo.averageRating}/5</h5>\n                    <h6><i>Based on {bookInfo.volumeInfo.ratingsCount} reviews</i></h6>\n                  </>\n              }\n              <Button onClick={() => handleBookAdding()}>Add book to library</Button>\n            </Col>\n            <Col xs={5} >\n              <img src={bookInfo.volumeInfo.imageLinks.thumbnail} alt=\"cover\"/>\n            </Col>\n          </Row>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <Row>\n          <Col xs={10} className=\"text-justify\">\n            <h3 className=\"pb-2\" >Description</h3>  \n            {bookInfo.volumeInfo.description}\n          </Col>\n          {bookInfo.volumeInfo.categories !== undefined &&\n            <Col xs={2} >\n              <h4 className=\"pb-2\" >Categories</h4>\n              {bookInfo.volumeInfo.categories.map(name => {\n                return <Category key={name} name={name} owned={false}  />\n              })}\n          </Col>\n          }\n        </Row>\n      </Container>\n    </>\n  )\n\n  // return (\n  //   <Container className=\"bookinfo\">\n  //     <h2>{bookInfo.volumeInfo.title}</h2>\n  //     <h3>{bookInfo.volumeInfo.subtitle}</h3>\n  //     <h5><i>{bookInfo.volumeInfo.authors}</i></h5>\n  //     <Row className=\"pt-4\">\n  //       <Col md={6}>\n  //         <Image src={bookInfo.volumeInfo.imageLinks.thumbnail} />\n  //       </Col>\n  //       <Col className=\"text-justify\">\n  //         {bookInfo.volumeInfo.description}\n  //       </Col>\n  //     </Row>\n  //     <Row className=\"pt-4\">\n  //       <Col>\n  //         <Button onClick={() => handleBookAdding()}>Add book</Button>\n  //       </Col>\n  //       <Col>\n  //       </Col>\n  //     </Row>\n  //   </Container>  \n  // )\n}\n\nexport default BookInfo","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FaStar } from 'react-icons/fa'\nimport { tryBookUpdate } from '../Reducers/userReducer'\nimport '../custom-css.css'\n\nconst StarRating = ({ book }) => {\n  // const book = useSelector(state => state.ownedBook.bookInfo)\n  const dispatch = useDispatch()\n  const token = useSelector(state => state.login.token)\n  const [score, setScore] = useState(book.rating)\n  const [paintedStars, setPaintedStars] = useState(book.rating)\n  const stars = 5\n\n  // useEffect(() => {\n  //   setPaintedStars(book.rating)\n  //   setScore(book.rating)\n  // }, [book])\n\n  const handleScore = (value) => {\n    setScore(value)\n    book.rating = value\n    dispatch(tryBookUpdate(book, token))\n  }\n\n  return (\n    <div>\n      {[...Array(stars)].map((value, i) => {\n        const currentScore = i + 1\n        return (\n          <FaStar \n            className=\"pointer\" \n            key={i} \n            size={30} \n            color={paintedStars >= currentScore  ? 'orange' : 'gray'} \n            onClick={() => handleScore(currentScore)} \n            onMouseEnter={() => setPaintedStars(currentScore)}\n            onMouseLeave={() => setPaintedStars(score)}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default StarRating","import React from 'react'\nimport { Card, Col, Row } from 'react-bootstrap'\nimport StarRating from './StarRating'\nimport { Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { setOwnedBookInfo } from '../Reducers/ownedBookReducer'\n\nconst BookCard = ({ book }) => {\n  const dispatch = useDispatch()\n\n  const setInfo = (info) => {\n    console.log('setting info')\n    console.log(info)\n    dispatch(setOwnedBookInfo(info))\n  }\n\n  return (\n    <Card className=\"h-100 w-100\">\n      <Card.Body className=\"genre\">\n        <Row>\n          <Col className=\"pr-0\">\n            <Link to={`/${book.title}`} onClick={() => setInfo(book)} >\n              <img src={book.linkToCoverImage} alt=\"book cover\"/>\n            </Link>\n          </Col>\n          <Col className=\"pl-0\">\n            <Row>\n              <h5>{book.title}</h5>\n            </Row>\n            <Row>\n              <h6 className=\"text-muted\" ><i>by {book.author}</i></h6>\n            </Row>\n          </Col>\n        </Row>\n      </Card.Body>\n      <Card.Footer>\n        <Row className=\"float-right pr-2\">\n          <StarRating book={book} />\n        </Row>\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default BookCard","import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport '../custom-css.css'\nimport BookCard from '../Components/BookCard'\nimport Navigation from '../Components/Navigation'\nimport Notification from '../Components/Notification'\nimport { resetLibraryView } from '../Reducers/libraryReducer'\n\nconst MyBooks = () => {\n  const dispatch = useDispatch()\n  const books = useSelector(state => state.login.user_books)\n  const targetedBook = useSelector(state => state.library)\n  const [sortedBooks, setSortedBooks] = useState([...books])\n  const [showAlert, setShowAlert] = useState(false)\n  const bottomRef = useRef()\n\n  useEffect(() => {\n    sortDesc('rating')\n    highlightBook()\n  }, [books, targetedBook])\n\n  const highlightBook = () => {\n    if (bottomRef.current !== undefined && targetedBook.scrollToBottom === true) {\n      bottomRef.current.scrollIntoView({ behavior: 'smooth' })\n      dispatch(resetLibraryView())\n      setShowAlert(true)\n    }\n  }\n\n  const types = {\n    title: 'title',\n    author: 'author',\n    rating: 'rating'\n  }\n\n  const sortDesc= (field) => {\n    const type = types[field]\n    const tempArr = [...books]\n    tempArr.sort((bookA, bookB) => {\n      if (bookA[type] > bookB[type]) {\n        return -1\n      } else if (bookA[type] < bookB[type]) {\n        return 1\n      }\n      return 0\n    })\n    setSortedBooks(tempArr)\n  }\n\n  const sortAsc = (field) => {\n    const type = types[field]\n    const tempArr = [...books]\n    tempArr.sort((bookA, bookB) => {\n      if (bookA[type] > bookB[type]) {\n        return 1\n      } else if (bookA[type] < bookB[type]) {\n        return -1\n      }\n      return 0\n    })\n    setSortedBooks(tempArr)\n  }\n\n  return (\n    <>\n    <Container fluid className=\"bookshelf\" >\n      <Navigation showSort={true} sortDesc={sortDesc} sortAsc={sortAsc} />\n      <Row>\n        {showAlert === true &&\n          <Notification setShowAlert={setShowAlert} />\n        }\n      </Row>\n      <Row  className=\"library\">\n        {sortedBooks.map((book => {\n          return (\n            <Col sm={12} md={6} xl={4} className=\"pt-3\" key={book.id} >\n              <BookCard book={book} />\n            </Col>\n          )\n        }))}\n      </Row>\n      <div ref={bottomRef}>\n      </div>\n    </Container>\n    </>\n  )\n}\n\nexport default MyBooks","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Tabs, Tab, Form, Button, Card, Container } from 'react-bootstrap'\nimport { tryBookUpdate, addQuoteToBook } from '../Reducers/userReducer'\nimport { AiOutlineClose } from 'react-icons/ai'\nimport { FaPlus } from 'react-icons/fa'\nimport Category from './Category'\n\nconst Review = ({ setShow }) => {\n  const book = useSelector(state => state.ownedBook.bookInfo)\n  const token = useSelector(state => state.login.token)\n  \n  const [review, setReview] = useState(book.review)\n  const [editReview, setEditReview] = useState(false)\n  const [quoteAdding, setQuoteAdding] = useState(false)\n  const [newQuote, setNewQuote] = useState(null)\n  const [categoryAdding, setCategoryAdding] = useState(false)\n  const [newCategory, setNewCategory] = useState(null)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    setReview(book.review)\n  }, [book])\n\n  const handleReview = async (event) => {\n    event.preventDefault()\n    const updatedBook = {\n      ...book,\n      review: review,\n    }\n    dispatch(tryBookUpdate(updatedBook, token))\n    setEditReview(false)\n    setQuoteAdding(false)\n  }\n\n  const handleNewQuote = async (event) => {\n    event.preventDefault()\n    dispatch(addQuoteToBook(book.id, newQuote, token))\n    setQuoteAdding(false)\n    setNewQuote(null)\n  }\n\n  const handleQuoteDelete = async (id) => {\n    let filteredQuotes = book.quotes\n    for (let i = 0; i < filteredQuotes.length; i ++) {\n      if (filteredQuotes[i].id === id) {\n        filteredQuotes.splice(i, 1)\n        break\n      }\n    }\n    const updatedBook = {\n      ...book,\n      quotes: filteredQuotes\n    }\n    dispatch(tryBookUpdate(updatedBook, token))\n  }\n\n  const handleNewCategory = async (event) => {\n    event.preventDefault()\n    const updatedBook = {\n      ...book,\n      categories: book.categories.concat(newCategory)\n    }\n    dispatch(tryBookUpdate(updatedBook, token))\n    setCategoryAdding(false)\n    setNewCategory(null)\n  }\n\n  const handleCategoryDelete = async (category) => {\n    let filteredCategories = book.categories\n    for (let i = 0; i < filteredCategories.length; i ++) {\n      if (filteredCategories[i] === category) {\n        filteredCategories.splice(i, 1)\n        break\n      }\n    }\n    const updatedBook = {\n      ...book,\n      categories: filteredCategories\n    }\n    dispatch(tryBookUpdate(updatedBook, token))\n  }\n\n\n  return (\n    <Tabs>\n      <Tab eventKey=\"review\" title=\"Review\">\n        {!editReview ?\n          <Row className=\"pt-3\">\n            <Col xs={12} sm={2}>\n              <Button variant=\"link\" onClick={() => setEditReview(!editReview)}>Edit</Button>\n            </Col>\n            <Col xs={12} sm={10}>\n              {review}\n            </Col>\n          </Row>\n          :\n          <Row className=\"pt-3\">\n            <Col sm={12} md={2}>\n              <Button variant=\"secondary\" onClick={() => setEditReview(!editReview)}>Cancel</Button>\n            </Col>\n            <Col sm={12} md={10} >\n              <Form onSubmit={handleReview} >\n                <Form.Group>\n                  <Form.Control \n                    as=\"textarea\" \n                    rows={10} \n                    value={review} \n                    onChange={e => setReview(e.target.value)} \n                  />\n                </Form.Group>\n                <Button type=\"submit\" className=\"mr-1\">Save changes</Button>\n              </Form>\n            </Col>\n          </Row>\n        }\n      </Tab>\n      <Tab eventKey=\"quotes\" title=\"Quotes\">\n        {!quoteAdding ?\n        <Row className=\"pt-3\">\n          <Col xs={12} sm={2}>\n            <Button variant=\"link\" onClick={() => setQuoteAdding(!quoteAdding)} >\n              <FaPlus size={35} />\n            </Button>\n          </Col>\n          <Col xs={12} sm={10}>\n            {book.quotes.map(quote => {\n              return (\n                <Row className=\"mb-3 mt-3\">\n                  <Col key={quote.id}>\n                    <Card >\n                      <Card.Header>\n                        <Row>\n                          <Col className=\"pr-0 text-right\">\n                            <AiOutlineClose className=\"pointer\" onClick={() => handleQuoteDelete(quote.id)} />\n                          </Col>\n                        </Row>\n                      </Card.Header>\n                      <Card.Body className=\"overflow-auto\" >\n                        <i> {quote.quote}</i>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                </Row>\n              )\n            })}\n          </Col>\n          </Row>\n          :\n          <Row className=\"pt-3\">\n            <Col sm={12} md={2} >\n              <Button variant=\"secondary\" onClick={() => setQuoteAdding(!quoteAdding)}>Cancel</Button>\n            </Col>\n            <Col sm={12} md={10} >\n              <Form onSubmit={handleNewQuote}>\n                <Form.Group>\n                  <Form.Control \n                    as=\"textarea\" \n                    rows={8} \n                    onChange={e => setNewQuote(e.target.value)} \n                    placeholder=\"Write your quote here.\"\n                  />\n                </Form.Group>\n                <Button type=\"submit\" className=\"mr-1\">Save quote</Button>\n              </Form>\n            </Col>\n          </Row>\n        }\n      </Tab>\n      <Tab eventKey=\"categories\" title=\"Categories\" >\n        {!categoryAdding ?\n        <Row className=\"pt-3\">\n          <Col xs={12} sm={2}>\n            <Button variant=\"link\" onClick={() => setCategoryAdding(!categoryAdding)} >\n              <FaPlus size={35} />\n            </Button>\n          </Col>\n          <Col xs={12} sm={10} className='mt-3' >\n            <Container>\n              <Row>\n                {book.categories.map(category => {\n                  return (\n                    <Category key={category} name={category} handleCategoryDelete={() => handleCategoryDelete(category)} owned={true} />\n                  )\n                })}\n              </Row>\n            </Container>\n          </Col>\n        </Row>\n        :\n        <Row className=\"pt-3\">\n          <Col sm={12} md={2} >\n            <Button variant=\"secondary\" onClick={() => setCategoryAdding(!categoryAdding)}>Cancel</Button>\n          </Col>\n          <Col sm={12} md={10} >\n            <Form onSubmit={handleNewCategory} >\n              <Form.Group>\n                <Form.Control \n                  type=\"input\"\n                  onChange={e => setNewCategory(e.target.value)}\n                />\n              </Form.Group>\n              <Button type=\"submit\" className=\"mr-1\">Save category</Button>\n            </Form>\n          </Col>\n        </Row>\n        }  \n      </Tab>\n      <Tab eventKey=\"options\" title=\"Options\">\n        <Row>\n          <Col className=\"pt-5 text-center\">\n            <Button variant=\"link\" style={{ color: 'red' }} onClick={() => setShow(true)} >\n              Delete Book\n            </Button>\n          </Col>\n        </Row>\n      </Tab>\n    </Tabs>\n  )\n}\n\nexport default Review","import React from 'react'\nimport { Button, Modal, Row } from 'react-bootstrap'\n\n\nconst DeleteConfirmation = ({ show, setShow, book, handleDelete }) => {\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => setShow(false)}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Delete {book.title} by {book.author} from the library?</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Row>\n          <Button className=\"mr-1\" variant=\"danger\" onClick={handleDelete}>Delete</Button>\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>Cancel</Button>\n        </Row>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default DeleteConfirmation","import { React, useEffect, useState } from 'react'\nimport { Container, Jumbotron, Row, Col, Form } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { deleteBookFromLibrary, tryBookUpdate } from '../Reducers/userReducer'\nimport { Redirect } from 'react-router-dom'\nimport StarRating from '../Components/StarRating'\nimport Review from '../Components/Review'\nimport DeleteConfirmation from '../Components/DeleteConfirmation'\nimport Category from '../Components/Category'\nimport '../custom-css.css'\n\nconst OwnedBookView = () => {\n  const book = useSelector(state => state.ownedBook.bookInfo)\n  const token = useSelector(state => state.login.token)\n  const [bookRead, setBookRead] = useState(() => book === null ? null : book.read)\n  const [bookOwned, setBookOwned] = useState(() => book === null ? null : book.owned)\n  const [show, setShow] = useState(false)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (book !== null) {\n      setBookRead(book.read)\n      setBookOwned(book.owned)\n    }\n  }, [book])\n\n  const handleDelete = async () => {\n    dispatch(deleteBookFromLibrary(book.id, token))\n    setShow(false)\n  }\n\n  const handleRead = () => {\n    const updatedBook = {\n      ...book,\n      read: !book.read\n    }\n    setBookRead(!book.read)\n    dispatch(tryBookUpdate(updatedBook, token))\n  }\n\n  const handleOwned = () => {\n    const updatedBook = {\n      ...book,\n      owned: !book.owned\n    }\n    setBookOwned(!book.owned)\n    dispatch(tryBookUpdate(updatedBook, token))\n  }\n\n  if (book === null) {\n    return (\n      <Redirect to='/' />\n    )\n  }\n \n  return (\n    <>\n    <Jumbotron fluid>\n      <Container className=\"jumbo\">\n        <Row>\n          <Col xs={7}>\n            <h1>{book.title}</h1>\n            <h5><i>{book.author}</i></h5>\n            <StarRating book={book} />\n            <Form className=\"pt-3\">\n              <Form.Check\n                inline \n                type=\"checkbox\"\n                id=\"read\"\n                label=\"Read\"\n                checked={bookRead}\n                onChange={handleRead}\n              />\n              <Form.Check\n                inline \n                type=\"checkbox\"\n                id=\"owned\"\n                label=\"Owned\"\n                checked={bookOwned}\n                onChange={handleOwned}\n              />\n            </Form>\n          </Col>\n          <Col xs={5} >\n            <img src={book.linkToCoverImage} alt=\"cover\"/>\n          </Col>\n        </Row>\n      </Container>\n    </Jumbotron>\n    <Container>\n      <DeleteConfirmation show={show} setShow={setShow} book={book} handleDelete={handleDelete} />\n      <Row>\n        <Col xs={9} >\n          <Review setShow={setShow} />\n        </Col>\n      </Row>\n    </Container>\n    </>\n  )\n}\n\nexport default OwnedBookView","import BookGrid from './Components/BookGrid'\nimport Navigation from './Components/Navigation'\nimport Login from './Views/Login'\nimport BookInfo from './Views/BookInfo'\nimport MyBooks from './Views/MyBooks'\nimport OwnedBookView from './Views/OwnedBookView'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport './custom-css.css'\n\nconst App = () => {\n  const user = useSelector(state => state.login.user)\n\n  if (user === null) {\n    return (\n      <Login />\n    )\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/search/:etag\">\n          <Navigation showSort={false} />\n          <BookInfo />\n        </Route>\n        <Route path=\"/search\">\n          <Navigation showSort={false}/>\n          {/* <h2 className=\"mt-3 text-center\">Google Books Search</h2>\n          <Searchbar /> */}\n          <BookGrid />\n        </Route>\n        <Route path=\"/:title\">\n          <Navigation showSort={false}/>\n          <OwnedBookView />\n        </Route>\n        <Route path=\"/\">\n          <MyBooks />\n        </Route>\n      </Switch>       \n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}