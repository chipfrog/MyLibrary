{"version":3,"sources":["Services/books.js","Reducers/bookSearchReducer.js","Reducers/bookInfoReducer.js","Services/login.js","Services/user.js","Reducers/notificationReducer.js","Reducers/userReducer.js","Reducers/ownedBookReducer.js","store.js","Components/SearchBar.js","Components/Book.js","Components/BookGrid.js","Components/NavBar.js","Components/Notification.js","Views/Login.js","Components/BookReviewForm.js","Views/BookInfo.js","Views/MyBooks.js","Components/StarRating.js","Views/OwnedBookView.js","App.js","index.js"],"names":["getBooks","filter","a","axios","get","result","console","log","data","updateBook","bookInfo","token","bearerToken","config","headers","Authorization","bookData","id","review","rating","read","quotes","put","response","addBook","title","volumeInfo","author","authors","linkToCoverImage","imageLinks","thumbnail","post","searchBooks","dispatch","books","type","bookSearchReducer","state","action","bookInfoReducer","login","credentials","res","createUser","userInfo","user","setNotification","message","notificationReducer","initialState","tryUserCreation","newUsername","newPassword","error","tryLogin","username","password","tryBookUpdate","book","userReducer","user_books","map","setOwnedBookInfo","ownedBookReducer","reducer","combineReducers","bookSearch","ownedBook","notification","stateFromLocalStorage","userStateInStorage","localStorage","getItem","JSON","parse","getUserState","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","userState","stringify","setItem","saveUserState","getState","Searchbar","useDispatch","fetchBooks","event","preventDefault","target","value","clearSearhBar","document","getElementById","reset","Form","className","onSubmit","Row","Col","xs","span","offset","sm","md","lg","Control","name","placeholder","Button","variant","Book","info","setInfo","to","etag","Image","src","onClick","BookGrid","useSelector","size","Object","keys","length","rows","rowCounter","itemCounter","rowKey","i","undefined","push","row","Navigation","Navbar","bg","Brand","as","Link","Nav","Notification","Alert","onClose","dismissible","Heading","Login","useState","show","setShow","handleClose","setNewUsername","setNewPassword","setUsernameError","setPasswordError","setUsername","setPassword","usernameError","passwordError","handleLogin","correctInput","input","minLength","handleUserCreation","Container","fluid","Card","border","Header","Body","Group","controlId","Label","onChange","Modal","onHide","backdrop","keyboard","closeButton","Title","style","color","BookReviewForm","isNewBook","setReview","quote","setQuote","quoteList","setQuoteList","quoteCount","setQuoteCount","setRating","setRead","handleBookAdding","addBookToLibrary","handleBookUpdate","e","concat","Check","label","BookInfo","subtitle","description","MyBooks","sortedBooks","setSortedBooks","sortType","setSortType","asc","setAsc","ratingAsc","setRatingAsc","titleAsc","setTitleAsc","authorAsc","setAuthorAsc","useEffect","kirjat","test","sort","bookA","bookB","sortBooks","handleSortType","handleAscType","Table","bordered","hover","bgcolor","alt","StarRating","score","setScore","paintedStars","setPaintedStars","Array","currentScore","handleScore","onMouseEnter","onMouseLeave","OwnedBookView","Jumbotron","Footer","App","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.21c74fc4.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const getBooks = async (filter) => {\n  const result = await axios.get(`/api/googlebooks/${filter}`)\n  console.log(result.data)\n  return result.data\n}\n\nexport const updateBook = async (bookInfo, token) => {\n  const bearerToken = `bearer ${token}`\n\n  const config = {\n    headers: { Authorization: bearerToken }\n  }\n\n  const bookData = {\n    id: bookInfo.id,\n    review: bookInfo.review,\n    rating: bookInfo.rating,\n    read: bookInfo.read,\n    quotes: bookInfo.quotes\n  }\n\n  const response = await axios.put(`/api/googleBooks/edit`, bookData, config)\n  console.log(response)\n\n}\n\nexport const addBook = async ( bookInfo, token ) => {\n  const bearerToken = `bearer ${token}`\n\n  const config = {\n    headers: { Authorization: bearerToken }\n  }\n\n  const bookData = {\n    title: bookInfo.volumeInfo.title,\n    author: bookInfo.volumeInfo.authors[0],\n    linkToCoverImage: bookInfo.volumeInfo.imageLinks.thumbnail,\n    review: bookInfo.review,\n    rating: bookInfo.rating,\n    read: bookInfo.read,\n    quotes: bookInfo.quotes\n  }\n\n  const response = await axios.post(`/api/googlebooks`, bookData, config)\n  console.log(response)\n}\n\n\n\n\n","import { getBooks } from '../Services/books'\n\nconst bookSearchReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'BOOK_SEARCH':\n      return action.data\n    case 'INIT_SEARCH_RESULTS':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initSearchResults = () => {\n  return {\n    type: 'INIT_SEARCH_RESULTS',\n    data: []\n  }\n}\n\nexport const searchBooks = (filter) => {\n  return async dispatch => {\n    const books = await getBooks(filter)\n    dispatch({\n      type: 'BOOK_SEARCH',\n      data: books,\n    })\n  }\n}\n\nexport default bookSearchReducer","const bookInfoReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_BOOK_INFO':\n      return action.data\n    case 'RESET_BOOK_INFO':\n      return null  \n    default:\n      return state\n  }\n}\n\nexport const setBookInfo = (bookInfo) => {\n  return {\n    type: 'SET_BOOK_INFO',\n    data: { bookInfo }\n  }\n}\n\nexport default bookInfoReducer","import axios from 'axios'\n\nexport const login = async (credentials) => {\n  const res = await axios.post(`/api/login`, credentials)\n  return res.data\n}\n\n","import axios from 'axios'\n\nexport const getUser = async (token) => {\n  const bearerToken = `bearer ${token}`\n  console.log(`token: ${bearerToken}`)\n\n  const config = {\n    headers: { Authorization: bearerToken }\n  }\n  const user = await axios.get(`/api/user`, config)\n  // console.log(`requested user: ${user.data}`)\n  return user.data\n}\n\nexport const createUser = async (userInfo) => {\n  const user = await axios.post(`/api/user`, userInfo)\n  console.log(`User creation: ${user.data}`)\n  return user.data\n}","\nconst notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SHOW_NOTIFICATION':\n      return action.data\n    case 'RESET_MESSAGE':\n      return null \n    default:\n      return state  \n  }\n}\n\nexport const resetNotification = () => {\n  return {\n    type: 'RESET_MESSAGE',\n    data: null\n  }\n}\n\nexport const setNotification = (message) => {\n  return {\n    type: 'SHOW_NOTIFICATION',\n    data: message\n  }\n}\n\nexport default notificationReducer","import { login } from '../Services/login'\nimport { addBook, updateBook } from '../Services/books'\nimport { createUser } from '../Services/user'\nimport { setNotification } from './notificationReducer'\n\nconst initialState = {\n  user: null,\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data\n    case 'LOGOUT':\n      return action.data\n    case 'CREATE_USER':\n      return action.data\n    case 'ADD_BOOK':\n      return {\n        ...state, \n        user_books: [...state.user_books, action.data]}\n    case 'UPDATE_BOOK':\n      return {\n        ...state,\n        user_books: state.user_books.map((book) => {\n          if (book.id === action.data.id) {\n            return {\n              ...book,\n              rating: action.data.rating,\n              review: action.data.review,\n              quotes: action.data.quotes,\n              read: action.data.read\n            }\n          }\n          return book\n        })\n      }\n    case 'DELETE_BOOK':\n      return state\n    case 'RESET':\n      return initialState  \n    default:\n      return state\n  }\n}\n\nexport const tryUserCreation = ({ newUsername, newPassword }) => {\n  return async dispatch => {\n    try {\n      await createUser({ newUsername, newPassword })\n      dispatch({\n        type: 'CREATE_USER',\n        data: initialState\n      })\n    } catch (error) {\n      dispatch(setNotification(error.response.data.error))\n    }\n  }\n}\n\nexport const tryLogin = ({ username, password }) => {\n  return async dispatch => {\n    try {\n      const user = await login({ username, password })\n      dispatch({\n        type: 'LOGIN',\n        data: user\n      })\n    } catch(error) {\n      dispatch(setNotification(error.response.data.error))\n    }\n  }\n}\n\nexport const tryBookUpdate = (book, token) => {\n  return async dispatch => {\n    try {\n      await updateBook(book, token) \n      dispatch({\n        type: 'UPDATE_BOOK',\n        data: book\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const addBookToLibrary = (book, token) => {\n  return async dispatch => {\n    try {\n      await addBook(book, token)\n\n      const bookInfo = {\n        title: book.volumeInfo.title,\n        author: book.volumeInfo.authors[0],\n        linkToCoverImage: book.volumeInfo.imageLinks.thumbnail,\n        rating: book.rating,\n        quotes: book.quotes,\n        review: book.review\n      }\n      dispatch({\n        type: 'ADD_BOOK',\n        data: bookInfo\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const tryLogout = () => {\n  return {\n    type: 'LOGOUT',\n    data: initialState\n  }\n}\n\nexport default userReducer","const ownedBookReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_OWNED_BOOK_INFO':\n      return action.data\n    case 'RESET_OWNED_BOOK_INFO':\n      return null  \n    default:\n      return state\n  }\n}\n\nexport const setOwnedBookInfo = (bookInfo) => {\n  return {\n    type: 'SET_OWNED_BOOK_INFO',\n    data: { bookInfo }\n  }\n}\n\nexport default ownedBookReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport bookSearchReducer from './Reducers/bookSearchReducer'\nimport bookInfoReducer from './Reducers/bookInfoReducer'\nimport userReducer from './Reducers/userReducer'\nimport notificationReducer from './Reducers/notificationReducer'\nimport ownedBookReducer from './Reducers/ownedBookReducer'\n\nconst reducer = combineReducers({\n  bookSearch: bookSearchReducer,\n  bookInfo: bookInfoReducer,\n  ownedBook: ownedBookReducer,\n  login: userReducer,\n  notification: notificationReducer\n})\n\nconst saveUserState = (state) => {\n  try {\n    const userState = JSON.stringify(state)\n    localStorage.setItem('userState', userState)\n  } catch (error) {\n    return undefined\n  }\n}\n\nconst getUserState = () => {\n  try {\n    const userStateInStorage = localStorage.getItem('userState')\n    if (userStateInStorage === null) {\n      return undefined\n    }\n    return JSON.parse(userStateInStorage)\n  } catch (error) {\n    return undefined\n  }\n}\n\nconst stateFromLocalStorage = getUserState()\n\nconst store = createStore(\n  reducer,\n  stateFromLocalStorage,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nstore.subscribe(() => {\n  saveUserState(store.getState())\n})\n\nexport default store","import React from 'react'\nimport { Button, Form, Row, Col } from 'react-bootstrap'\nimport { BsSearch } from 'react-icons/bs'\nimport { useDispatch } from 'react-redux'\nimport { searchBooks } from '../Reducers/bookSearchReducer'\n\nconst Searchbar = () => { \n  const dispatch = useDispatch()\n  \n  const fetchBooks = async (event) => {\n    event.preventDefault()\n    const filter = event.target.filter.value\n    dispatch(searchBooks(filter))\n    clearSearhBar()\n  }\n\n  const clearSearhBar = () => {\n    document.getElementById('search bar').reset()\n  }\n \n  return (\n    <Form className=\"mt-5 mb-5\" id={'search bar'} onSubmit={fetchBooks}>\n      <Row>\n        <Col xs={{ span: 5, offset: 3 }} sm={{ span: 6, offset: 3 }} md={{ span: 6, offset: 2 }} lg={{ span: 6, offset: 2 }}>\n          <Form.Control \n            type=\"text\"\n            name=\"filter\" \n            placeholder=\"Search books\"\n          />\n        </Col>\n        <Col xs={1} >\n          <Button variant=\"primary\" type=\"submit\">\n            <BsSearch />\n          </Button>\n        </Col>\n      </Row>\n    </Form>    \n  )\n}\n\nexport default Searchbar\n","import React from 'react'\nimport { Image } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { setBookInfo } from '../Reducers/bookInfoReducer'\n\nconst Book = ({ info }) => {\n  const dispatch = useDispatch()\n  \n  const setInfo = async () => {\n    dispatch(setBookInfo(info))\n  }\n\n    return (\n      <p>\n        <Link to={`/search/${info.etag}`}>\n          <Image src={info.volumeInfo.imageLinks.thumbnail} onClick={() => setInfo()} />\n        </Link>\n      </p>\n    )\n}\n\nexport default Book","import { Row, Col } from 'react-bootstrap';\nimport { useSelector } from 'react-redux'\nimport Book from './Book'\n\nconst BookGrid = () => {\n  const books = useSelector(state => state.bookSearch)\n\n  let size = Object.keys(books).length\n  let rows = []\n  let rowCounter = 0\n  let itemCounter = 0\n  let rowKey = 0\n\n  for (let i = 0; i < size; i ++) {\n    if (!(itemCounter % 6)) {\n      rowCounter ++\n      rows[rowCounter] = []\n    }\n\n    // Adds only books with cover image\n    if (books[i].volumeInfo.imageLinks !== undefined) {\n      rows[rowCounter].push(books[i])\n      itemCounter ++\n    }\n  }\n  \n  return (\n    <div >\n      {rows.map(row => {\n        return (\n        <Row className='text-center' key={rowKey ++}>\n          {row.map(book => {\n            return (\n              <Col sm={6} md={4} lg={2} key={book.etag}>\n                <Book info={book} key={book.etag}/>\n              </Col>\n            )\n          })}\n        </Row>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default BookGrid","import React from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { tryLogout } from '../Reducers/userReducer'\nimport { initSearchResults } from '../Reducers/bookSearchReducer'\n\nconst Navigation = () => {\n  const dispatch = useDispatch()\n  \n  const handleLogout = () => {\n    dispatch(initSearchResults())\n    dispatch(tryLogout())\n  }\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand as={Link} to={\"/\"}>My Library</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link as={Link} to={\"/search\"}>Book finder</Nav.Link>\n      </Nav>\n      <Nav className=\"ml-auto\">\n        <Nav.Link as={Link} to={\"/\"} onClick={handleLogout} >Logout</Nav.Link>\n      </Nav>\n    </Navbar>  \n  )\n}\n\nexport default Navigation","import { Alert } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { resetNotification } from '../Reducers/notificationReducer'\nimport '../custom-css.css'\n\nconst Notification = () => {\n  const dispatch = useDispatch()\n  const message = useSelector(state => state.notification)\n  \n  const handleShow = () => {\n    dispatch(resetNotification())\n  }\n\n  if (message !== null) {\n    return (\n      <Alert className=\"notification\" variant=\"danger\" onClose={handleShow} dismissible>\n        <Alert.Heading>\n          <strong>Oops!</strong>\n        </Alert.Heading>\n        <p>\n          {message}\n        </p>\n      </Alert>\n    )\n  }\n\n  return (\n    null\n  )\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport { Button, Form, Row, Col, Modal, Container, Card } from 'react-bootstrap'\nimport { useDispatch } from 'react-redux'\nimport { tryLogin, tryUserCreation } from '../Reducers/userReducer'\nimport Notification from '../Components/Notification'\nimport '../custom-css.css'\n\nconst Login = () => {\n  const dispatch = useDispatch()\n  const [show, setShow] = useState(false)\n  const handleClose = () => {\n    setShow(false)\n    setNewUsername('')\n    setNewPassword('')\n    setUsernameError(false)\n    setPasswordError(false)\n  }  \n  const handleShow = () => setShow(true)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [newUsername, setNewUsername] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n\n  const [usernameError, setUsernameError] = useState(false)\n  const [passwordError, setPasswordError] = useState(false)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    dispatch(tryLogin({ username, password }))\n    setUsername('')\n    setPassword('')\n  }\n\n  const correctInput = (input, minLength) => {\n    if (input.length >= minLength) {\n      return true\n    }\n    return false\n  }\n\n  const handleUserCreation = async (event) => {\n    event.preventDefault()\n    if (!correctInput(newUsername, 5)) {\n      setUsernameError(true)\n    }\n    if (!correctInput(newPassword, 5)) {\n      setPasswordError(true)\n    }\n    else {\n      console.log(`Username: ${newUsername}, Password: ${newPassword}`)\n      dispatch(tryUserCreation({ newUsername, newPassword }))\n      handleClose()\n    }\n  }\n\n  const handleNewUsernameInput = (input) => {\n    setNewUsername(input)\n    if (correctInput(input, 5)) {\n      setUsernameError(false)\n    } else {\n      setUsernameError(true)\n    }\n  }\n\n  const handleNewPasswordInput = (input) => {\n    setNewPassword(input)\n    if(correctInput(input, 5)) {\n      setPasswordError(false)\n    } else {\n      setPasswordError(true)\n    }\n  }\n\n  return (\n    <Container fluid className=\"testi\">\n      <Notification className=\"notify\"/>\n        <Card className=\"card\" bg=\"light\" border=\"dark\">\n          <Card.Header className=\"text-center\"><h2>Login</h2></Card.Header>\n          <Card.Body>\n            <Form onSubmit={handleLogin}>\n              <Form.Group controlId=\"formBasicText\">\n                <Form.Label>Username</Form.Label>             \n                <Form.Control \n                  type=\"text\" \n                  name=\"usernameLogin\"\n                  value={username} \n                  placeholder=\"Username\"\n                  onChange={({ target }) => setUsername(target.value)}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                  type=\"password\" \n                  name=\"passwordLogin\"\n                  value={password} \n                  placeholder=\"Password\"\n                  onChange={({ target }) => setPassword(target.value)}\n                />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Login\n              </Button>{' '}\n              <Button variant=\"success\" onClick={handleShow} >\n                Create User\n              </Button>\n            </Form> \n          </Card.Body>\n        </Card>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false} \n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Register new user</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleUserCreation} >\n            <Form.Group >\n              <Form.Row>\n                <Form.Label>Username</Form.Label>\n              </Form.Row>\n              <Form.Row>\n                <Form.Control \n                  type=\"text\" \n                  name=\"usernameRegister\" \n                  value={newUsername} \n                  placeholder=\"Choose your username\" \n                  onChange={({ target }) => handleNewUsernameInput(target.value)} \n                />\n              </Form.Row>\n              {usernameError && \n                <Form.Row style={{color: 'red'}}>Username must be at least 5 characters long!</Form.Row>\n              }    \n            </Form.Group>\n            <Form.Group>\n              <Form.Row>\n                <Form.Label>Password</Form.Label>\n              </Form.Row>\n              <Form.Row>\n                <Form.Control \n                  type=\"password\" \n                  name=\"passwordRegister\" \n                  value={newPassword} \n                  placeholder=\"Choose a secure password\" \n                  onChange={({ target }) => handleNewPasswordInput(target.value)} \n                />\n              </Form.Row>\n              {passwordError && \n                <Form.Row style={{color: 'red'}}>Password must be at least 5 characters long!</Form.Row>\n              } \n            </Form.Group>\n            <Form.Group as={Row} >\n              <Col xs={3}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n              <Col xs={3} >\n                <Button variant=\"danger\" onClick={handleClose} >Cancel</Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </Container>\n  )\n}\n\nexport default Login","import React, { useState } from 'react'\nimport { Modal, Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addBookToLibrary, tryBookUpdate } from '../Reducers/userReducer'\nimport { setOwnedBookInfo } from '../Reducers/ownedBookReducer'\n\nconst BookReviewForm = ({ bookInfo, handleClose, show }) => {\n  const dispatch = useDispatch()\n  const token = useSelector(state => state.login.token)\n  const isNewBook = bookInfo.volumeInfo !== undefined\n\n  const [review, setReview] = useState(() => {if (isNewBook) {return ''} return bookInfo.review})\n  const [quote, setQuote] = useState('')\n  const [quoteList, setQuoteList] = useState(() => {if (isNewBook) {return []} return bookInfo.quotes})\n  const [quoteCount, setQuoteCount] = useState(() => {if (isNewBook) {return 0} return bookInfo.quotes.length})\n\n  // Active only when adding a new book\n  const [rating, setRating] = useState(1)\n  const [read, setRead] = useState(false)\n\n  const handleAddQuote = () => {\n    setQuoteList(quoteList.concat(quote))\n    setQuote('')\n    setQuoteCount(quoteCount + 1)\n  }\n\n  const handleBookAdding = () => {\n  \n    const book = {\n      ...bookInfo,\n      rating: rating,\n      review: review,\n      read: read,\n      quotes: quoteList\n    }\n    dispatch(addBookToLibrary(book, token))\n    setReview('')\n    setRating(1)\n    setRead(false)\n    setQuote('')\n    setQuoteList([])\n    setQuoteCount(0)\n    handleClose()\n  }\n\n  const handleBookUpdate = async () => {\n    const book = {\n      ...bookInfo,\n      review: review,\n      quotes: quoteList\n    }\n    console.log(book)\n    dispatch(tryBookUpdate(book, token))\n    dispatch(setOwnedBookInfo(book))\n    // setReview(review)\n    // setRating(rating)\n    // setRead(read)\n    // setQuote('')\n    // setQuoteList(quoteList)\n    // setQuoteCount(quoteCount)\n    handleClose()\n  }\n\n  const handleBook = () => {\n    if (isNewBook) {\n      handleBookAdding()\n    } else {\n      handleBookUpdate()\n    }\n  }\n\n  return (\n    <Modal\n      size=\"xl\"\n      show={show}\n      onHide={handleClose}\n      backdrop=\"static\"\n      keyboard={false} \n    >\n      <Modal.Header closeButton>\n        {!isNewBook ?\n          <Modal.Title>{bookInfo.title} by {bookInfo.author}</Modal.Title> \n          : <Modal.Title>{bookInfo.volumeInfo.title} by {bookInfo.volumeInfo.authors}</Modal.Title>\n        }\n      </Modal.Header>\n      <Modal.Body>\n      <Form className=\"pt-4 text-left\" >\n        <Form.Row>\n          {isNewBook &&\n            <Form.Group controlId=\"formGrade\" >\n              <Form.Label>Grade</Form.Label>\n                <Form.Control \n                  as=\"select\" \n                  value={rating}\n                  onChange={e => setRating(e.target.value)}\n                >\n                  <option value={1}>1</option>\n                  <option value={2}>2</option>\n                  <option value={3}>3</option>\n                  <option value={4}>4</option>\n                  <option value={5}>5</option>\n                  <option value={6}>6</option>\n                  <option value={7}>7</option>\n                  <option value={8}>8</option>\n                  <option value={9}>9</option>\n                  <option value={10}>10</option>\n                </Form.Control>\n            </Form.Group>\n          }\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"formReview\" >\n            <Form.Label>Review</Form.Label>\n            <Form.Control \n              as=\"textarea\"\n              rows={10}\n              value={review}\n              onChange={e => setReview(e.target.value)}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col} >\n            <Form.Label>Favorite quotes</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={6}\n              value={quote}\n              onChange={e => setQuote(e.target.value)}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col} >\n            <Button onClick={handleAddQuote}>Add quote</Button>\n          </Form.Group>\n          <Form.Group as={Col} >\n            Quotes saved: {quoteCount}\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"formBookRead\">\n            <Form.Check label=\"Book read\" onChange={() => setRead(!read)}/>\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col} >\n            <Button onClick={handleBook}>\n              Submit\n            </Button>\n          </Form.Group>\n        </Form.Row>\n      </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default BookReviewForm","import { React, useState } from 'react'\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport BookReviewForm from '../Components/BookReviewForm'\n\nconst BookInfo = () => {\n  const info = useSelector(state => state.bookInfo)\n  const bookInfo = info.bookInfo\n\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  \n  if (bookInfo === null) {\n    return (\n      <h2>undefined</h2>\n    )\n  }\n\n  // Korjaa näkymä, kun kirjalijoita enemmän kuin yksi!\n\n  return (\n    <Container className=\"pt-4 text-center\">\n      <h2>{bookInfo.volumeInfo.title}</h2>\n      <h3>{bookInfo.volumeInfo.subtitle}</h3>\n      <h5><i>{bookInfo.volumeInfo.authors}</i></h5>\n      <Row className=\"pt-4\">\n        <Col md={6}>\n          <Image src={bookInfo.volumeInfo.imageLinks.thumbnail} />\n        </Col>\n        <Col className=\"text-justify\">\n          {bookInfo.volumeInfo.description}\n        </Col>\n      </Row>\n      <Row className=\"pt-4\">\n        <Col>\n          <Button onClick={handleShow}>Add book</Button>\n        </Col>\n        <Col>\n        </Col>\n      </Row>\n      <BookReviewForm bookInfo={bookInfo} handleClose={handleClose} show={show} />      \n    </Container>  \n  )\n}\n\nexport default BookInfo","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Container, Table, Row, Col } from 'react-bootstrap'\nimport { FaSortNumericDown, FaSortNumericUpAlt, FaSortAlphaDown, FaSortAlphaUpAlt } from 'react-icons/fa'\nimport { setOwnedBookInfo } from '../Reducers/ownedBookReducer'\nimport '../custom-css.css'\nimport { alignPropType } from 'react-bootstrap/esm/DropdownMenu'\n\nconst MyBooks = () => {\n  const books = useSelector(state => state.login.user_books)\n  const [sortedBooks, setSortedBooks] = useState([...books])\n  const [sortType, setSortType] = useState('rating')\n  const [asc, setAsc] = useState('rating')\n\n  const [ratingAsc, setRatingAsc] = useState(true)\n  const [titleAsc, setTitleAsc] = useState(true)\n  const [authorAsc, setAuthorAsc] = useState(true)\n\n  const dispatch = useDispatch()\n  \n  const setInfo = async (info) => {\n    dispatch(setOwnedBookInfo(info))\n  }\n\n  useEffect(() => {\n    console.log(sortedBooks)\n    const sortBooks = () => {\n      let kirjat = []\n      \n      const sortTypes = {\n        title: 'title',\n        author: 'author',\n        rating: 'rating'\n      }\n\n      const ascTypes = {\n        title: titleAsc,\n        author: authorAsc,\n        rating: ratingAsc\n      }\n\n      const test = sortTypes[sortType]\n      const ascBy = ascTypes[asc]\n      if (ascBy) {\n        kirjat = [...sortedBooks].sort((bookA, bookB) => {\n          if (bookA[test] > bookB[test]) {\n            return -1\n          } else if (bookA[test] < bookB[test]) {\n            return 1\n          }\n          return 0\n        })\n      } else {\n        kirjat = [...sortedBooks].sort((bookA, bookB) => {\n          if (bookB[test] > bookA[test]) {\n            return -1\n          } else if (bookB[test] < bookA[test]) {\n            return 1\n          }\n          return 0\n        })\n      }\n      setSortedBooks(kirjat)\n    }\n    sortBooks()\n  }, [sortType, ratingAsc, titleAsc, authorAsc])\n\n  const handleSortType = (type) => {\n    setAsc(type)\n    setSortType(type)\n    handleAscType(type)\n  }\n\n  const handleAscType = (type) => {\n    switch(type) {\n      case 'rating':\n        setRatingAsc(!ratingAsc)\n        break\n      case 'title':\n        setTitleAsc(!titleAsc)\n        break\n      case 'author':\n        setAuthorAsc(!authorAsc)\n        break    \n      default:\n        break\n    }\n  }\n\n  return (\n    <Container fluid className=\"bookshelf\" >\n      <Row >\n        <Col xs={2} md={6}>\n        <Table bordered hover className=\"taulukko\">\n        <thead bgcolor=\"#d1975c\">\n          <tr>\n            <th>Cover</th>\n            <th>\n              <Row>\n                <Col xs={10}>\n                  Title\n                </Col>\n                <Col xs={2}>\n                  {titleAsc ?\n                    <FaSortAlphaDown \n                      className=\"sortIcon\"\n                      onClick={() => handleSortType('title')}\n                    />\n                    :\n                    <FaSortAlphaUpAlt \n                      className=\"sortIcon\"\n                      onClick={() => handleSortType('title')}\n                    />\n                }\n                </Col>\n              </Row>   \n            </th>\n            <th>\n              <Row>\n                <Col xs={10}>\n                  Author\n                </Col>\n                <Col xs={2}>\n                  {authorAsc ?\n                    <FaSortAlphaDown \n                      className=\"sortIcon\"\n                      onClick={() => handleSortType('author')}\n                    />\n                    :\n                    <FaSortAlphaUpAlt \n                      className=\"sortIcon\"\n                      onClick={() => handleSortType('author')}\n                    />\n                  }\n                </Col>\n              </Row>  \n            </th>\n            <th>\n              <Row>\n                <Col xs={9}>\n                  Stars\n                </Col>\n                <Col xs={1}>\n                  {ratingAsc ? \n                    <FaSortNumericDown \n                      className=\"sortIcon\" \n                      onClick={() => handleSortType('rating')}\n                    />\n                    :\n                    <FaSortNumericUpAlt \n                      className=\"sortIcon\" \n                      onClick={() => handleSortType('rating')}\n                    />\n                  }\n                </Col>\n              </Row>\n            </th>\n          </tr>\n        </thead>\n        <tbody bgcolor= \"#edc9a4\">\n          {sortedBooks.map(book => {\n            return (\n              <tr>\n                <td>\n                  <Link to={`/${book.title}`} onClick={() => setInfo(book)} >\n                    <img src={book.linkToCoverImage} alt=\"book cover\"/>\n                  </Link>\n                </td>\n                <td className=\"align-middle\"><b>{book.title}</b></td>\n                <td className=\"align-middle\"><b>{book.author}</b></td>\n                <td className=\"align-middle\"><b>{book.rating}</b></td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n      </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default MyBooks","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FaStar } from 'react-icons/fa'\nimport { tryBookUpdate } from '../Reducers/userReducer'\nimport '../custom-css.css'\n\nconst StarRating = ({ book }) => {\n  const dispatch = useDispatch()\n  const token = useSelector(state => state.login.token)\n  const [score, setScore] = useState(book.rating)\n  const [paintedStars, setPaintedStars] = useState(book.rating)\n\n  const handleScore = (value) => {\n    setScore(value)\n    book.rating = value\n    dispatch(tryBookUpdate(book, token))\n  }\n\n  return (\n    <div>\n      {[...Array(10)].map((value, i) => {\n        const currentScore = i + 1\n        return (\n          <FaStar \n            className=\"star\" \n            key={i} \n            size={30} \n            color={paintedStars >= currentScore  ? 'orange' : 'gray'} \n            onClick={() => handleScore(currentScore)} \n            onMouseEnter={() => setPaintedStars(currentScore)}\n            onMouseLeave={() => setPaintedStars(score)}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default StarRating","import { React, useState } from 'react'\nimport { Container, Jumbotron, Row, Col, Button, Card } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport StarRating from '../Components/StarRating'\nimport BookReviewForm from '../Components/BookReviewForm'\n\nconst OwnedBookView = () => {\n  const book = useSelector(state => state.ownedBook.bookInfo)\n  const [show, setShow] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  return (\n    <div>\n      <Jumbotron fluid>\n        <Container className=\"text-left\">\n          <Row>\n            <Col xs={8} >\n              <h1>{book.title}</h1>\n              <h5><i>{book.author}</i></h5>\n              <StarRating book={book} />\n            </Col>\n            <Col xs={4} >\n              <img src={book.linkToCoverImage} alt=\"cover\"/>\n            </Col>\n          </Row>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <Row>\n          <Col> \n            <h4>Review</h4>\n          </Col>\n        </Row>\n        <Row className=\"text-justify\">\n          <Col>\n            <p>{book.review}</p>\n            <Button onClick={handleShow} >Edit</Button>\n          </Col>\n        </Row>\n        <BookReviewForm bookInfo={book} handleClose={handleClose} show={show} />\n        <Row className=\"pt-3\" >\n          <Col>\n            <h4>Quotes</h4>\n          </Col>\n        </Row>\n        {book.quotes.map((quote) => {\n          return (\n            <Row className=\"pt-3\">\n              <Col>\n                <Card>\n                  <Card.Header>\n                    <Button className=\"close\"></Button>\n                  </Card.Header>\n                  <Card.Body>\n                    {quote}\n                  </Card.Body>\n                  <Card.Footer>\n                    <Row>\n                      <Button>Edit</Button>\n                      <Button className=\"ml-1\" variant=\"danger\">Delete</Button>\n                    </Row>\n                  </Card.Footer>\n                </Card>\n              </Col>\n            </Row>\n          )\n        })}\n      </Container>\n    </div>    \n  )\n}\n\nexport default OwnedBookView","import Searchbar from './Components/SearchBar'\nimport BookGrid from './Components/BookGrid'\nimport Navigation from './Components/NavBar'\nimport Login from './Views/Login'\nimport BookInfo from './Views/BookInfo'\nimport MyBooks from './Views/MyBooks'\nimport OwnedBookView from './Views/OwnedBookView'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport './custom-css.css'\n\nconst App = () => {\n  const user = useSelector(state => state.login.user)\n\n  if (user === null) {\n    return (\n      <Login />\n    )\n  }\n\n  return (\n    <Router>\n      <Navigation />\n      <Switch>\n        <Route path=\"/search/:etag\">\n          <BookInfo />\n        </Route>\n        <Route path=\"/search\">\n          <h2 className=\"mt-3 text-center\">Google Books Search</h2>\n          <Searchbar />\n          <BookGrid />\n        </Route>\n        <Route path=\"/:title\">\n          <OwnedBookView />\n        </Route>\n        <Route path=\"/\">\n          <MyBooks />\n        </Route>\n      </Switch>       \n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}